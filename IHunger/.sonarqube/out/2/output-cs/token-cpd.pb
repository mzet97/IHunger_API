˝G
iD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Context\DataIdentityDbContext.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Context $
{ 
public 

class !
DataIdentityDbContext &
:' (
IdentityDbContext) :
<: ;
User; ?
,? @
IdentityRoleA M
<M N
GuidN R
>R S
,S T
GuidU Y
>Y Z
{ 
public !
DataIdentityDbContext $
($ %
DbContextOptions% 5
<5 6!
DataIdentityDbContext6 K
>K L
optionsM T
)T U
:V W
baseX \
(\ ]
options] d
)d e
{ 	

AppContext 
. 
	SetSwitch  
(  !
$str! G
,G H
trueI M
)M N
;N O
} 	
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 

Restaurant 
>  
Restaurants! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
OrderStatus  
>  !
OrdersStatus" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Order 
> 
Orders "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
Item 
> 
Itens  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
Coupon 
> 
Coupons $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 

Restaurant 
>  
Comments! )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
CategoryRestaurant '
>' (
CategoryRestaurants) <
{= >
get? B
;B C
setD G
;G H
}I J
public 
DbSet 
< 
CategoryProduct $
>$ %
CategoryProducts& 6
{7 8
get9 <
;< =
set> A
;A B
}C D
public   
DbSet   
<   
AddressRestaurant   &
>  & '
AddressRestaurants  ( :
{  ; <
get  = @
;  @ A
set  B E
;  E F
}  G H
public!! 
DbSet!! 
<!! 
AddressUser!!  
>!!  !
AddressUsers!!" .
{!!/ 0
get!!1 4
;!!4 5
set!!6 9
;!!9 :
}!!; <
public"" 
DbSet"" 
<"" 
ProfileUser""  
>""  !
ProfileUsers""" .
{""/ 0
get""1 4
;""4 5
set""6 9
;""9 :
}""; <
	protected%% 
override%% 
void%% 
OnConfiguring%%  -
(%%- .#
DbContextOptionsBuilder%%. E
optionsBuilder%%F T
)%%T U
{&& 	
optionsBuilder'' 
.'' 
LogTo''  
(''  !
Console''! (
.''( )
	WriteLine'') 2
)''2 3
;''3 4
})) 	
	protected,, 
override,, 
void,, 
OnModelCreating,,  /
(,,/ 0
ModelBuilder,,0 <
modelBuilder,,= I
),,I J
{-- 	
modelBuilder.. 
... 
HasDefaultSchema.. )
(..) *
$str..* 2
)..2 3
;..3 4
modelBuilder// 
.// +
ApplyConfigurationsFromAssembly// 8
(//8 9
typeof//9 ?
(//? @!
DataIdentityDbContext//@ U
)//U V
.//V W
Assembly//W _
)//_ `
;//` a
foreach11 
(11 
var11 
relationship11 %
in11& (
modelBuilder11) 5
.115 6
Model116 ;
.11; <
GetEntityTypes11< J
(11J K
)11K L
.11L M

SelectMany11M W
(11W X
e11X Y
=>11Z \
e11] ^
.11^ _
GetForeignKeys11_ m
(11m n
)11n o
)11o p
)11p q
relationship11r ~
.11~ 
DeleteBehavior	11 ç
=
11é è
DeleteBehavior
11ê û
.
11û ü
ClientSetNull
11ü ¨
;
11¨ ≠
base33 
.33 
OnModelCreating33  
(33  !
modelBuilder33! -
)33- .
;33. /
}55 	
	protected77 
override77 
void77  
ConfigureConventions77  4
(774 5%
ModelConfigurationBuilder775 N 
configurationBuilder77O c
)77c d
{88 	
base99 
.99  
ConfigureConventions99 %
(99% & 
configurationBuilder99& :
)99: ;
;99; < 
configurationBuilder;;  
.;;  !

Properties;;! +
<;;+ ,
ZonedDateTime;;, 9
>;;9 :
(;;: ;
x;;; <
=>;;= ?
x;;@ A
.;;A B
HaveConversion;;B P
<;;P Q"
ZonedDateTimeConverter;;Q g
>;;g h
(;;h i
);;i j
);;j k
;;;k l
}<< 	
public>> 
override>> 
Task>> 
<>> 
int>>  
>>>  !
SaveChangesAsync>>" 2
(>>2 3
CancellationToken>>3 D
cancellationToken>>E V
=>>W X
new>>Y \
CancellationToken>>] n
(>>n o
)>>o p
)>>p q
{?? 	
foreach@@ 
(@@ 
var@@ 
entry@@ 
in@@ !
ChangeTracker@@" /
.@@/ 0
Entries@@0 7
(@@7 8
)@@8 9
.@@9 :
Where@@: ?
(@@? @
entry@@@ E
=>@@F H
entry@@I N
.@@N O
Entity@@O U
.@@U V
GetType@@V ]
(@@] ^
)@@^ _
.@@_ `
GetProperty@@` k
(@@k l
$str@@l w
)@@w x
!=@@y {
null	@@| Ä
)
@@Ä Å
)
@@Å Ç
{AA 
ifBB 
(BB 
entryBB 
.BB 
StateBB 
==BB  "
EntityStateBB# .
.BB. /
AddedBB/ 4
)BB4 5
{CC 
entryDD 
.DD 
PropertyDD "
(DD" #
$strDD# .
)DD. /
.DD/ 0
CurrentValueDD0 <
=DD= >
DateTimeDD? G
.DDG H
NowDDH K
;DDK L
entryEE 
.EE 
PropertyEE "
(EE" #
$strEE# .
)EE. /
.EE/ 0
CurrentValueEE0 <
=EE= >
DateTimeEE? G
.EEG H
NowEEH K
;EEK L
}FF 
ifHH 
(HH 
entryHH 
.HH 
StateHH 
==HH  "
EntityStateHH# .
.HH. /
ModifiedHH/ 7
)HH7 8
{II 
entryJJ 
.JJ 
PropertyJJ "
(JJ" #
$strJJ# .
)JJ. /
.JJ/ 0
CurrentValueJJ0 <
=JJ= >
DateTimeJJ? G
.JJG H
NowJJH K
;JJK L
entryKK 
.KK 
PropertyKK "
(KK" #
$strKK# .
)KK. /
.KK/ 0

IsModifiedKK0 :
=KK; <
falseKK= B
;KKB C
}LL 
}MM 
returnOO 
baseOO 
.OO 
SaveChangesAsyncOO (
(OO( )
cancellationTokenOO) :
)OO: ;
;OO; <
}PP 	
}SS 
internalUU 
classUU "
ZonedDateTimeConverterUU )
:UU* +
ValueConverterUU, :
<UU: ;
ZonedDateTimeUU; H
,UUH I
LocalDateTimeUUJ W
>UUW X
{VV 
publicWW "
ZonedDateTimeConverterWW %
(WW% &
)WW& '
:WW( )
baseXX 
(XX 
vXX 
=>XX 
vXX 
.XX 
WithZoneXX 
(XX  
DateTimeZoneXX  ,
.XX, -
UtcXX- 0
)XX0 1
.XX1 2
LocalDateTimeXX2 ?
,XX? @
vXXA B
=>XXC E
vXXF G
.XXG H
InUtcXXH M
(XXM N
)XXN O
)XXO P
{YY 	
}ZZ 	
}[[ 
}\\ Ò
mD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\AddressRestaurantMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 $
AddressRestaurantMapping

 )
:

* +$
IEntityTypeConfiguration

, D
<

D E
AddressRestaurant

E V
>

V W
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
AddressRestaurant0 A
>A B
builderC J
)J K
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
City$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
County$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
District$ ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Street$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder   
.   
Property   
(   
p   
=>   !
p  " #
.  # $
ZipCode  $ +
)  + ,
.!! 

IsRequired!! 
(!! 
)!! 
."" 
HasColumnType"" 
("" 
$str"" ,
)"", -
;""- .
builder$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ !
p$$" #
.$$# $
Latitude$$$ ,
)$$, -
.%% 
HasColumnType%% 
(%% 
$str%% ,
)%%, -
;%%- .
builder'' 
.'' 
Property'' 
('' 
p'' 
=>'' !
p''" #
.''# $
	Longitude''$ -
)''- .
.(( 
HasColumnType(( 
((( 
$str(( ,
)((, -
;((- .
})) 	
}** 
}++ Ÿ
gD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\AddressUserMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
AddressUserMapping

 #
:

$ %$
IEntityTypeConfiguration

& >
<

> ?
AddressUser

? J
>

J K
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
AddressUser0 ;
>; <
builder= D
)D E
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
City$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
County$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
District$ ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Street$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder   
.   
Property   
(   
p   
=>   !
p  " #
.  # $
ZipCode  $ +
)  + ,
.!! 

IsRequired!! 
(!! 
)!! 
."" 
HasColumnType"" 
("" 
$str"" ,
)"", -
;""- .
builder$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ !
p$$" #
.$$# $
Latitude$$$ ,
)$$, -
.%% 
HasColumnType%% 
(%% 
$str%% ,
)%%, -
;%%- .
builder'' 
.'' 
Property'' 
('' 
p'' 
=>'' !
p''" #
.''# $
	Longitude''$ -
)''- .
.(( 
HasColumnType(( 
((( 
$str(( ,
)((, -
;((- .
})) 	
}** 
}++ Ω
kD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\CategoryProductMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 "
CategoryProductMapping

 '
:

( )$
IEntityTypeConfiguration

* B
<

B C
CategoryProduct

C R
>

R S
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
CategoryProduct0 ?
>? @
builderA H
)H I
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Description$ /
)/ 0
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str -
)- .
;. /
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Name$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
} 	
} 
} …
nD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\CategoryRestaurantMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 %
CategoryRestaurantMapping

 *
:

+ ,$
IEntityTypeConfiguration

- E
<

E F
CategoryRestaurant

F X
>

X Y
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
CategoryRestaurant0 B
>B C
builderD K
)K L
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Description$ /
)/ 0
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str -
)- .
;. /
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Name$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
} 	
} 
} ò
cD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\CommentMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
CommentMapping

 
:

  !$
IEntityTypeConfiguration

" :
<

: ;
Comment

; B
>

B C
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Comment0 7
>7 8
builder9 @
)@ A
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Text$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str -
)- .
;. /
builder 
. 
Property 
( 
c 
=> !
c" #
.# $
Starts$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
} 	
} 
} ù
bD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\CouponMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
CouponMapping

 
:

  $
IEntityTypeConfiguration

! 9
<

9 :
Coupon

: @
>

@ A
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Coupon0 6
>6 7
builder8 ?
)? @
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Code$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Value$ )
)) *
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
ExpireAt$ ,
), -
. 

IsRequired 
( 
) 
; 
builder 
. 
HasMany 
( 
p 
=>  
p! "
." #
Orders# )
)) *
. 
WithOne 
( 
c 
=> 
c 
. 
Coupon %
)% &
. 
HasForeignKey 
( 
c 
=>  "
c# $
.$ %
IdCoupon% -
)- .
;. /
} 	
} 
} è
`D:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\ItemMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
ItemMapping

 
:

 $
IEntityTypeConfiguration

 7
<

7 8
Item

8 <
>

< =
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Item0 4
>4 5
builder6 =
)= >
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Price$ )
)) *
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Quantity$ ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
} 	
} 
} ú
aD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\OrderMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
OrderMapping

 
:

 $
IEntityTypeConfiguration

  8
<

8 9
Order

9 >
>

> ?
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Order0 5
>5 6
builder7 >
)> ?
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Price$ )
)) *
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
HasMany 
( 
r 
=>  
r! "
." #
Items# (
)( )
. 
WithOne 
( 
c 
=> 
c 
. 
Order $
)$ %
. 
HasForeignKey 
( 
c 
=>  "
c# $
.$ %
IdOrder% ,
), -
;- .
} 	
} 
} ®
gD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\OrderStatusMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
OrderStatusMapping

 #
:

$ %$
IEntityTypeConfiguration

& >
<

> ?
OrderStatus

? J
>

J K
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
OrderStatus0 ;
>; <
builder= D
)D E
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Name$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str -
)- .
;. /
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Number$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
} 	
} 
} Â"
cD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\ProductMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
ProductMapping

 
:

  !$
IEntityTypeConfiguration

" :
<

: ;
Product

; B
>

B C
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Product0 7
>7 8
builder9 @
)@ A
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Name$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Description$ /
)/ 0
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Price$ )
)) *
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Kosher$ *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str &
)& '
;' (
builder   
.   
Property   
(   
p   
=>   !
p  " #
.  # $
Vegan  $ )
)  ) *
.!! 

IsRequired!! 
(!! 
)!! 
."" 
HasColumnType"" 
("" 
$str"" &
)""& '
;""' (
builder$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ !
p$$" #
.$$# $

Vegetarian$$$ .
)$$. /
.%% 

IsRequired%% 
(%% 
)%% 
.&& 
HasColumnType&& 
(&& 
$str&& &
)&&& '
;&&' (
builder(( 
.(( 
Property(( 
((( 
p(( 
=>(( !
p((" #
.((# $
Image(($ )
)(() *
.)) 

IsRequired)) 
()) 
))) 
.** 
HasColumnType** 
(** 
$str** ,
)**, -
;**- .
builder,, 
.,, 
HasMany,, 
(,, 
r,, 
=>,,  
r,,! "
.,," #
Itens,,# (
),,( )
.-- 
WithOne-- 
(-- 
c-- 
=>-- 
c-- 
.--  
Product--  '
)--' (
... 
HasForeignKey.. 
(.. 
c..  
=>..! #
c..$ %
...% &
	IdProduct..& /
)../ 0
;..0 1
builder00 
.00 
Property00 
(00 
x00 
=>00 !
x00" #
.00# $
IdCategoryProduct00$ 5
)005 6
.006 7

IsRequired007 A
(00A B
)00B C
;00C D
builder22 
.22 
HasOne22 
(22 
x22 
=>22 
x22  !
.22! "
CategoryProduct22" 1
)221 2
.222 3
WithMany223 ;
(22; <
)22< =
.22= >
HasForeignKey22> K
(22K L
x22L M
=>22N P
x22Q R
.22R S
IdCategoryProduct22S d
)22d e
;22e f
}33 	
}44 
}55 ô
cD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\ProfileMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
ProfileMapping

 
:

  !$
IEntityTypeConfiguration

" :
<

: ;
ProfileUser

; F
>

F G
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
ProfileUser0 ;
>; <
builder= D
)D E
{ 	
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Name$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
LastName$ ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
	BirthDate$ -
)- .
. 

IsRequired 
( 
false !
)! "
;" #
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Type$ (
)( )
. 

IsRequired 
( 
) 
; 
builder 
. 
HasMany 
( 
u 
=>  
u! "
." #
Orders# )
)) *
. 
WithOne 
( 
c 
=> 
c 
. 
ProfileUser *
)* +
.   
HasForeignKey   
(   
c   
=>    "
c  # $
.  $ %
IdProfileUser  % 2
)  2 3
.!! 

IsRequired!! 
(!! 
false!!  
)!!  !
;!!! "
builder## 
.## 
Property## 
(## 
x## 
=>## !
x##" #
.### $
IdAddressUser##$ 1
)##1 2
.##2 3

IsRequired##3 =
(##= >
)##> ?
;##? @
builder%% 
.%% 
HasOne%% 
(%% 
x%% 
=>%% 
x%%  !
.%%! "
AddressUser%%" -
)%%- .
.%%. /
WithMany%%/ 7
(%%7 8
)%%8 9
.%%9 :
HasForeignKey%%: G
(%%G H
x%%H I
=>%%J L
x%%M N
.%%N O
IdAddressUser%%O \
)%%\ ]
;%%] ^
}&& 	
}'' 
}(( »!
fD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\RestaurantMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
RestaurantMapping

 "
:

# $$
IEntityTypeConfiguration

% =
<

= >

Restaurant

> H
>

H I
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0

Restaurant0 :
>: ;
builder< C
)C D
{ 	
builder 
. 
HasKey 
( 
r 
=> 
r  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
r 
=> !
r" #
.# $
Name$ (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
r 
=> !
r" #
.# $
Description$ /
)/ 0
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
Property 
( 
r 
=> !
r" #
.# $
Image$ )
)) *
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str ,
), -
;- .
builder 
. 
HasMany 
( 
r 
=>  
r! "
." #
Products# +
)+ ,
. 
WithOne 
( 
c 
=> 
c 
.  

Restaurant  *
)* +
. 
HasForeignKey 
( 
c  
=>! #
c$ %
.% &
IdRestaurant& 2
)2 3
;3 4
builder   
.   
HasMany   
(   
r   
=>    
r  ! "
.  " #
Comments  # +
)  + ,
.!! 
WithOne!! 
(!! 
c!! 
=>!! 
c!! 
.!!  

Restaurant!!  *
)!!* +
."" 
HasForeignKey"" 
("" 
c""  
=>""! #
c""$ %
.""% &
IdRestaurant""& 2
)""2 3
;""3 4
builder$$ 
.$$ 
Property$$ 
($$ 
x$$ 
=>$$ !
x$$" #
.$$# $
IdAddressRestaurant$$$ 7
)$$7 8
.$$8 9

IsRequired$$9 C
($$C D
)$$D E
;$$E F
builder%% 
.%% 
HasOne%% 
(%% 
x%% 
=>%% 
x%%  !
.%%! "
AddressRestaurant%%" 3
)%%3 4
.%%4 5
WithMany%%5 =
(%%= >
)%%> ?
.%%? @
HasForeignKey%%@ M
(%%M N
x%%N O
=>%%P R
x%%S T
.%%T U
IdAddressRestaurant%%U h
)%%h i
;%%i j
builder'' 
.'' 
Property'' 
('' 
x'' 
=>'' !
x''" #
.''# $ 
IdCategoryRestaurant''$ 8
)''8 9
.''9 :

IsRequired'': D
(''D E
)''E F
;''F G
builder(( 
.(( 
HasOne(( 
((( 
x(( 
=>(( 
x((  !
.((! "
CategoryRestaurant((" 4
)((4 5
.((5 6
WithMany((6 >
(((> ?
)((? @
.((@ A
HasForeignKey((A N
(((N O
x((O P
=>((Q S
x((T U
.((U V 
IdCategoryRestaurant((V j
)((j k
;((k l
})) 	
}** 
}++ –

`D:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Mappings\UserMapping.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 
Mappings %
{		 
public

 

class

 
UserMapping

 
:

 $
IEntityTypeConfiguration

 7
<

7 8
User

8 <
>

< =
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
User0 4
>4 5
builder6 =
)= >
{ 	
builder 
. 
Property 
( 
x 
=> !
x" #
.# $
IdProfileUser$ 1
)1 2
.2 3

IsRequired3 =
(= >
)> ?
;? @
builder 
. 
HasOne 
( 
x 
=> 
x  !
.! "
ProfileUser" -
)- .
.. /
WithMany/ 7
(7 8
)8 9
.9 :
HasForeignKey: G
(G H
xH I
=>J L
xM N
.N O
IdProfileUserO \
)\ ]
;] ^
} 	
} 
} °Ä
kD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Migrations\20211125113632_Start.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Migrations '
{ 
public		 

partial		 
class		 
Start		 
:		  
	Migration		! *
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
EnsureSchema )
() *
name 
: 
$str 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str *
,* +
schema 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
	CreatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= W
,W X
nullableY a
:a b
falsec h
)h i
,i j
	UpdatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= W
,W X
nullableY a
:a b
falsec h
)h i
,i j
Street 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
District 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: G
,G H
nullableI Q
:Q R
falseS X
)X Y
,Y Z
City 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
County 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
ZipCode 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
Latitude 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: G
,G H
nullableI Q
:Q R
trueS W
)W X
,X Y
	Longitude 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; H
,H I
nullableJ R
:R S
trueT X
)X Y
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% <
,""< =
x""> ?
=>""@ B
x""C D
.""D E
Id""E G
)""G H
;""H I
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateTable%% (
(%%( )
name&& 
:&& 
$str&& $
,&&$ %
schema'' 
:'' 
$str''  
,''  !
columns(( 
:(( 
table(( 
=>(( !
new((" %
{)) 
Id** 
=** 
table** 
.** 
Column** %
<**% &
Guid**& *
>*** +
(**+ ,
type**, 0
:**0 1
$str**2 8
,**8 9
nullable**: B
:**B C
false**D I
)**I J
,**J K
	CreatedAt++ 
=++ 
table++  %
.++% &
Column++& ,
<++, -
DateTime++- 5
>++5 6
(++6 7
type++7 ;
:++; <
$str++= W
,++W X
nullable++Y a
:++a b
false++c h
)++h i
,++i j
	UpdatedAt,, 
=,, 
table,,  %
.,,% &
Column,,& ,
<,,, -
DateTime,,- 5
>,,5 6
(,,6 7
type,,7 ;
:,,; <
$str,,= W
,,,W X
nullable,,Y a
:,,a b
false,,c h
),,h i
,,,i j
Street-- 
=-- 
table-- "
.--" #
Column--# )
<--) *
string--* 0
>--0 1
(--1 2
type--2 6
:--6 7
$str--8 E
,--E F
nullable--G O
:--O P
false--Q V
)--V W
,--W X
District.. 
=.. 
table.. $
...$ %
Column..% +
<..+ ,
string.., 2
>..2 3
(..3 4
type..4 8
:..8 9
$str..: G
,..G H
nullable..I Q
:..Q R
false..S X
)..X Y
,..Y Z
City// 
=// 
table//  
.//  !
Column//! '
<//' (
string//( .
>//. /
(/// 0
type//0 4
://4 5
$str//6 C
,//C D
nullable//E M
://M N
false//O T
)//T U
,//U V
County00 
=00 
table00 "
.00" #
Column00# )
<00) *
string00* 0
>000 1
(001 2
type002 6
:006 7
$str008 E
,00E F
nullable00G O
:00O P
false00Q V
)00V W
,00W X
ZipCode11 
=11 
table11 #
.11# $
Column11$ *
<11* +
string11+ 1
>111 2
(112 3
type113 7
:117 8
$str119 F
,11F G
nullable11H P
:11P Q
false11R W
)11W X
,11X Y
Latitude22 
=22 
table22 $
.22$ %
Column22% +
<22+ ,
string22, 2
>222 3
(223 4
type224 8
:228 9
$str22: G
,22G H
nullable22I Q
:22Q R
true22S W
)22W X
,22X Y
	Longitude33 
=33 
table33  %
.33% &
Column33& ,
<33, -
string33- 3
>333 4
(334 5
type335 9
:339 :
$str33; H
,33H I
nullable33J R
:33R S
true33T X
)33X Y
}44 
,44 
constraints55 
:55 
table55 "
=>55# %
{66 
table77 
.77 

PrimaryKey77 $
(77$ %
$str77% 6
,776 7
x778 9
=>77: <
x77= >
.77> ?
Id77? A
)77A B
;77B C
}88 
)88 
;88 
migrationBuilder:: 
.:: 
CreateTable:: (
(::( )
name;; 
:;; 
$str;; #
,;;# $
schema<< 
:<< 
$str<<  
,<<  !
columns== 
:== 
table== 
=>== !
new==" %
{>> 
Id?? 
=?? 
table?? 
.?? 
Column?? %
<??% &
Guid??& *
>??* +
(??+ ,
type??, 0
:??0 1
$str??2 8
,??8 9
nullable??: B
:??B C
false??D I
)??I J
,??J K
Name@@ 
=@@ 
table@@  
.@@  !
Column@@! '
<@@' (
string@@( .
>@@. /
(@@/ 0
type@@0 4
:@@4 5
$str@@6 N
,@@N O
	maxLength@@P Y
:@@Y Z
$num@@[ ^
,@@^ _
nullable@@` h
:@@h i
true@@j n
)@@n o
,@@o p
NormalizedNameAA "
=AA# $
tableAA% *
.AA* +
ColumnAA+ 1
<AA1 2
stringAA2 8
>AA8 9
(AA9 :
typeAA: >
:AA> ?
$strAA@ X
,AAX Y
	maxLengthAAZ c
:AAc d
$numAAe h
,AAh i
nullableAAj r
:AAr s
trueAAt x
)AAx y
,AAy z
ConcurrencyStampBB $
=BB% &
tableBB' ,
.BB, -
ColumnBB- 3
<BB3 4
stringBB4 :
>BB: ;
(BB; <
typeBB< @
:BB@ A
$strBBB H
,BBH I
nullableBBJ R
:BBR S
trueBBT X
)BBX Y
}CC 
,CC 
constraintsDD 
:DD 
tableDD "
=>DD# %
{EE 
tableFF 
.FF 

PrimaryKeyFF $
(FF$ %
$strFF% 5
,FF5 6
xFF7 8
=>FF9 ;
xFF< =
.FF= >
IdFF> @
)FF@ A
;FFA B
}GG 
)GG 
;GG 
migrationBuilderII 
.II 
CreateTableII (
(II( )
nameJJ 
:JJ 
$strJJ (
,JJ( )
schemaKK 
:KK 
$strKK  
,KK  !
columnsLL 
:LL 
tableLL 
=>LL !
newLL" %
{MM 
IdNN 
=NN 
tableNN 
.NN 
ColumnNN %
<NN% &
GuidNN& *
>NN* +
(NN+ ,
typeNN, 0
:NN0 1
$strNN2 8
,NN8 9
nullableNN: B
:NNB C
falseNND I
)NNI J
,NNJ K
NameOO 
=OO 
tableOO  
.OO  !
ColumnOO! '
<OO' (
stringOO( .
>OO. /
(OO/ 0
typeOO0 4
:OO4 5
$strOO6 C
,OOC D
nullableOOE M
:OOM N
falseOOO T
)OOT U
,OOU V
DescriptionPP 
=PP  !
tablePP" '
.PP' (
ColumnPP( .
<PP. /
stringPP/ 5
>PP5 6
(PP6 7
typePP7 ;
:PP; <
$strPP= K
,PPK L
nullablePPM U
:PPU V
falsePPW \
)PP\ ]
,PP] ^
	CreatedAtQQ 
=QQ 
tableQQ  %
.QQ% &
ColumnQQ& ,
<QQ, -
DateTimeQQ- 5
>QQ5 6
(QQ6 7
typeQQ7 ;
:QQ; <
$strQQ= W
,QQW X
nullableQQY a
:QQa b
falseQQc h
)QQh i
,QQi j
	UpdatedAtRR 
=RR 
tableRR  %
.RR% &
ColumnRR& ,
<RR, -
DateTimeRR- 5
>RR5 6
(RR6 7
typeRR7 ;
:RR; <
$strRR= W
,RRW X
nullableRRY a
:RRa b
falseRRc h
)RRh i
}SS 
,SS 
constraintsTT 
:TT 
tableTT "
=>TT# %
{UU 
tableVV 
.VV 

PrimaryKeyVV $
(VV$ %
$strVV% :
,VV: ;
xVV< =
=>VV> @
xVVA B
.VVB C
IdVVC E
)VVE F
;VVF G
}WW 
)WW 
;WW 
migrationBuilderYY 
.YY 
CreateTableYY (
(YY( )
nameZZ 
:ZZ 
$strZZ +
,ZZ+ ,
schema[[ 
:[[ 
$str[[  
,[[  !
columns\\ 
:\\ 
table\\ 
=>\\ !
new\\" %
{]] 
Id^^ 
=^^ 
table^^ 
.^^ 
Column^^ %
<^^% &
Guid^^& *
>^^* +
(^^+ ,
type^^, 0
:^^0 1
$str^^2 8
,^^8 9
nullable^^: B
:^^B C
false^^D I
)^^I J
,^^J K
Name__ 
=__ 
table__  
.__  !
Column__! '
<__' (
string__( .
>__. /
(__/ 0
type__0 4
:__4 5
$str__6 C
,__C D
nullable__E M
:__M N
false__O T
)__T U
,__U V
Description`` 
=``  !
table``" '
.``' (
Column``( .
<``. /
string``/ 5
>``5 6
(``6 7
type``7 ;
:``; <
$str``= K
,``K L
nullable``M U
:``U V
false``W \
)``\ ]
,``] ^
	CreatedAtaa 
=aa 
tableaa  %
.aa% &
Columnaa& ,
<aa, -
DateTimeaa- 5
>aa5 6
(aa6 7
typeaa7 ;
:aa; <
$straa= W
,aaW X
nullableaaY a
:aaa b
falseaac h
)aah i
,aai j
	UpdatedAtbb 
=bb 
tablebb  %
.bb% &
Columnbb& ,
<bb, -
DateTimebb- 5
>bb5 6
(bb6 7
typebb7 ;
:bb; <
$strbb= W
,bbW X
nullablebbY a
:bba b
falsebbc h
)bbh i
}cc 
,cc 
constraintsdd 
:dd 
tabledd "
=>dd# %
{ee 
tableff 
.ff 

PrimaryKeyff $
(ff$ %
$strff% =
,ff= >
xff? @
=>ffA C
xffD E
.ffE F
IdffF H
)ffH I
;ffI J
}gg 
)gg 
;gg 
migrationBuilderii 
.ii 
CreateTableii (
(ii( )
namejj 
:jj 
$strjj 
,jj  
schemakk 
:kk 
$strkk  
,kk  !
columnsll 
:ll 
tablell 
=>ll !
newll" %
{mm 
Idnn 
=nn 
tablenn 
.nn 
Columnnn %
<nn% &
Guidnn& *
>nn* +
(nn+ ,
typenn, 0
:nn0 1
$strnn2 8
,nn8 9
nullablenn: B
:nnB C
falsennD I
)nnI J
,nnJ K
Codeoo 
=oo 
tableoo  
.oo  !
Columnoo! '
<oo' (
stringoo( .
>oo. /
(oo/ 0
typeoo0 4
:oo4 5
$stroo6 C
,ooC D
nullableooE M
:ooM N
falseooO T
)ooT U
,ooU V
Valuepp 
=pp 
tablepp !
.pp! "
Columnpp" (
<pp( )
intpp) ,
>pp, -
(pp- .
typepp. 2
:pp2 3
$strpp4 =
,pp= >
nullablepp? G
:ppG H
falseppI N
)ppN O
,ppO P
ExpireAtqq 
=qq 
tableqq $
.qq$ %
Columnqq% +
<qq+ ,
DateTimeqq, 4
>qq4 5
(qq5 6
typeqq6 :
:qq: ;
$strqq< V
,qqV W
nullableqqX `
:qq` a
falseqqb g
)qqg h
,qqh i
	CreatedAtrr 
=rr 
tablerr  %
.rr% &
Columnrr& ,
<rr, -
DateTimerr- 5
>rr5 6
(rr6 7
typerr7 ;
:rr; <
$strrr= W
,rrW X
nullablerrY a
:rra b
falserrc h
)rrh i
,rri j
	UpdatedAtss 
=ss 
tabless  %
.ss% &
Columnss& ,
<ss, -
DateTimess- 5
>ss5 6
(ss6 7
typess7 ;
:ss; <
$strss= W
,ssW X
nullablessY a
:ssa b
falsessc h
)ssh i
}tt 
,tt 
constraintsuu 
:uu 
tableuu "
=>uu# %
{vv 
tableww 
.ww 

PrimaryKeyww $
(ww$ %
$strww% 1
,ww1 2
xww3 4
=>ww5 7
xww8 9
.ww9 :
Idww: <
)ww< =
;ww= >
}xx 
)xx 
;xx 
migrationBuilderzz 
.zz 
CreateTablezz (
(zz( )
name{{ 
:{{ 
$str{{ $
,{{$ %
schema|| 
:|| 
$str||  
,||  !
columns}} 
:}} 
table}} 
=>}} !
new}}" %
{~~ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Name
ÄÄ 
=
ÄÄ 
table
ÄÄ  
.
ÄÄ  !
Column
ÄÄ! '
<
ÄÄ' (
string
ÄÄ( .
>
ÄÄ. /
(
ÄÄ/ 0
type
ÄÄ0 4
:
ÄÄ4 5
$str
ÄÄ6 D
,
ÄÄD E
nullable
ÄÄF N
:
ÄÄN O
false
ÄÄP U
)
ÄÄU V
,
ÄÄV W
Number
ÅÅ 
=
ÅÅ 
table
ÅÅ "
.
ÅÅ" #
Column
ÅÅ# )
<
ÅÅ) *
int
ÅÅ* -
>
ÅÅ- .
(
ÅÅ. /
type
ÅÅ/ 3
:
ÅÅ3 4
$str
ÅÅ5 >
,
ÅÅ> ?
nullable
ÅÅ@ H
:
ÅÅH I
false
ÅÅJ O
)
ÅÅO P
,
ÅÅP Q
	CreatedAt
ÇÇ 
=
ÇÇ 
table
ÇÇ  %
.
ÇÇ% &
Column
ÇÇ& ,
<
ÇÇ, -
DateTime
ÇÇ- 5
>
ÇÇ5 6
(
ÇÇ6 7
type
ÇÇ7 ;
:
ÇÇ; <
$str
ÇÇ= W
,
ÇÇW X
nullable
ÇÇY a
:
ÇÇa b
false
ÇÇc h
)
ÇÇh i
,
ÇÇi j
	UpdatedAt
ÉÉ 
=
ÉÉ 
table
ÉÉ  %
.
ÉÉ% &
Column
ÉÉ& ,
<
ÉÉ, -
DateTime
ÉÉ- 5
>
ÉÉ5 6
(
ÉÉ6 7
type
ÉÉ7 ;
:
ÉÉ; <
$str
ÉÉ= W
,
ÉÉW X
nullable
ÉÉY a
:
ÉÉa b
false
ÉÉc h
)
ÉÉh i
}
ÑÑ 
,
ÑÑ 
constraints
ÖÖ 
:
ÖÖ 
table
ÖÖ "
=>
ÖÖ# %
{
ÜÜ 
table
áá 
.
áá 

PrimaryKey
áá $
(
áá$ %
$str
áá% 6
,
áá6 7
x
áá8 9
=>
áá: <
x
áá= >
.
áá> ?
Id
áá? A
)
ááA B
;
ááB C
}
àà 
)
àà 
;
àà 
migrationBuilder
ää 
.
ää 
CreateTable
ää (
(
ää( )
name
ãã 
:
ãã 
$str
ãã $
,
ãã$ %
schema
åå 
:
åå 
$str
åå  
,
åå  !
columns
çç 
:
çç 
table
çç 
=>
çç !
new
çç" %
{
éé 
Id
èè 
=
èè 
table
èè 
.
èè 
Column
èè %
<
èè% &
Guid
èè& *
>
èè* +
(
èè+ ,
type
èè, 0
:
èè0 1
$str
èè2 8
,
èè8 9
nullable
èè: B
:
èèB C
false
èèD I
)
èèI J
,
èèJ K
Name
êê 
=
êê 
table
êê  
.
êê  !
Column
êê! '
<
êê' (
string
êê( .
>
êê. /
(
êê/ 0
type
êê0 4
:
êê4 5
$str
êê6 C
,
êêC D
nullable
êêE M
:
êêM N
false
êêO T
)
êêT U
,
êêU V
LastName
ëë 
=
ëë 
table
ëë $
.
ëë$ %
Column
ëë% +
<
ëë+ ,
string
ëë, 2
>
ëë2 3
(
ëë3 4
type
ëë4 8
:
ëë8 9
$str
ëë: G
,
ëëG H
nullable
ëëI Q
:
ëëQ R
false
ëëS X
)
ëëX Y
,
ëëY Z
	BirthDate
íí 
=
íí 
table
íí  %
.
íí% &
Column
íí& ,
<
íí, -
DateTime
íí- 5
>
íí5 6
(
íí6 7
type
íí7 ;
:
íí; <
$str
íí= W
,
ííW X
nullable
ííY a
:
íía b
true
ííc g
)
ííg h
,
ííh i
Type
ìì 
=
ìì 
table
ìì  
.
ìì  !
Column
ìì! '
<
ìì' (
int
ìì( +
>
ìì+ ,
(
ìì, -
type
ìì- 1
:
ìì1 2
$str
ìì3 <
,
ìì< =
nullable
ìì> F
:
ììF G
false
ììH M
)
ììM N
,
ììN O
IdAddressUser
îî !
=
îî" #
table
îî$ )
.
îî) *
Column
îî* 0
<
îî0 1
Guid
îî1 5
>
îî5 6
(
îî6 7
type
îî7 ;
:
îî; <
$str
îî= C
,
îîC D
nullable
îîE M
:
îîM N
false
îîO T
)
îîT U
,
îîU V
	CreatedAt
ïï 
=
ïï 
table
ïï  %
.
ïï% &
Column
ïï& ,
<
ïï, -
DateTime
ïï- 5
>
ïï5 6
(
ïï6 7
type
ïï7 ;
:
ïï; <
$str
ïï= W
,
ïïW X
nullable
ïïY a
:
ïïa b
false
ïïc h
)
ïïh i
,
ïïi j
	UpdatedAt
ññ 
=
ññ 
table
ññ  %
.
ññ% &
Column
ññ& ,
<
ññ, -
DateTime
ññ- 5
>
ññ5 6
(
ññ6 7
type
ññ7 ;
:
ññ; <
$str
ññ= W
,
ññW X
nullable
ññY a
:
ñña b
false
ññc h
)
ññh i
}
óó 
,
óó 
constraints
òò 
:
òò 
table
òò "
=>
òò# %
{
ôô 
table
öö 
.
öö 

PrimaryKey
öö $
(
öö$ %
$str
öö% 6
,
öö6 7
x
öö8 9
=>
öö: <
x
öö= >
.
öö> ?
Id
öö? A
)
ööA B
;
ööB C
table
õõ 
.
õõ 

ForeignKey
õõ $
(
õõ$ %
name
úú 
:
úú 
$str
úú J
,
úúJ K
column
ùù 
:
ùù 
x
ùù  !
=>
ùù" $
x
ùù% &
.
ùù& '
IdAddressUser
ùù' 4
,
ùù4 5
principalSchema
ûû '
:
ûû' (
$str
ûû) 1
,
ûû1 2
principalTable
üü &
:
üü& '
$str
üü( 6
,
üü6 7
principalColumn
†† '
:
††' (
$str
††) -
)
††- .
;
††. /
}
°° 
)
°° 
;
°° 
migrationBuilder
££ 
.
££ 
CreateTable
££ (
(
££( )
name
§§ 
:
§§ 
$str
§§ (
,
§§( )
schema
•• 
:
•• 
$str
••  
,
••  !
columns
¶¶ 
:
¶¶ 
table
¶¶ 
=>
¶¶ !
new
¶¶" %
{
ßß 
Id
®® 
=
®® 
table
®® 
.
®® 
Column
®® %
<
®®% &
int
®®& )
>
®®) *
(
®®* +
type
®®+ /
:
®®/ 0
$str
®®1 :
,
®®: ;
nullable
®®< D
:
®®D E
false
®®F K
)
®®K L
.
©© 

Annotation
©© #
(
©©# $
$str
©©$ D
,
©©D E+
NpgsqlValueGenerationStrategy
©©F c
.
©©c d%
IdentityByDefaultColumn
©©d {
)
©©{ |
,
©©| }
RoleId
™™ 
=
™™ 
table
™™ "
.
™™" #
Column
™™# )
<
™™) *
Guid
™™* .
>
™™. /
(
™™/ 0
type
™™0 4
:
™™4 5
$str
™™6 <
,
™™< =
nullable
™™> F
:
™™F G
false
™™H M
)
™™M N
,
™™N O
	ClaimType
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
string
´´- 3
>
´´3 4
(
´´4 5
type
´´5 9
:
´´9 :
$str
´´; A
,
´´A B
nullable
´´C K
:
´´K L
true
´´M Q
)
´´Q R
,
´´R S

ClaimValue
¨¨ 
=
¨¨  
table
¨¨! &
.
¨¨& '
Column
¨¨' -
<
¨¨- .
string
¨¨. 4
>
¨¨4 5
(
¨¨5 6
type
¨¨6 :
:
¨¨: ;
$str
¨¨< B
,
¨¨B C
nullable
¨¨D L
:
¨¨L M
true
¨¨N R
)
¨¨R S
}
≠≠ 
,
≠≠ 
constraints
ÆÆ 
:
ÆÆ 
table
ÆÆ "
=>
ÆÆ# %
{
ØØ 
table
∞∞ 
.
∞∞ 

PrimaryKey
∞∞ $
(
∞∞$ %
$str
∞∞% :
,
∞∞: ;
x
∞∞< =
=>
∞∞> @
x
∞∞A B
.
∞∞B C
Id
∞∞C E
)
∞∞E F
;
∞∞F G
table
±± 
.
±± 

ForeignKey
±± $
(
±±$ %
name
≤≤ 
:
≤≤ 
$str
≤≤ F
,
≤≤F G
column
≥≥ 
:
≥≥ 
x
≥≥  !
=>
≥≥" $
x
≥≥% &
.
≥≥& '
RoleId
≥≥' -
,
≥≥- .
principalSchema
¥¥ '
:
¥¥' (
$str
¥¥) 1
,
¥¥1 2
principalTable
µµ &
:
µµ& '
$str
µµ( 5
,
µµ5 6
principalColumn
∂∂ '
:
∂∂' (
$str
∂∂) -
,
∂∂- .
onDelete
∑∑  
:
∑∑  !
ReferentialAction
∑∑" 3
.
∑∑3 4
Cascade
∑∑4 ;
)
∑∑; <
;
∑∑< =
}
∏∏ 
)
∏∏ 
;
∏∏ 
migrationBuilder
∫∫ 
.
∫∫ 
CreateTable
∫∫ (
(
∫∫( )
name
ªª 
:
ªª 
$str
ªª "
,
ªª" #
schema
ºº 
:
ºº 
$str
ºº  
,
ºº  !
columns
ΩΩ 
:
ΩΩ 
table
ΩΩ 
=>
ΩΩ !
new
ΩΩ" %
{
ææ 
Id
øø 
=
øø 
table
øø 
.
øø 
Column
øø %
<
øø% &
Guid
øø& *
>
øø* +
(
øø+ ,
type
øø, 0
:
øø0 1
$str
øø2 8
,
øø8 9
nullable
øø: B
:
øøB C
false
øøD I
)
øøI J
,
øøJ K
Name
¿¿ 
=
¿¿ 
table
¿¿  
.
¿¿  !
Column
¿¿! '
<
¿¿' (
string
¿¿( .
>
¿¿. /
(
¿¿/ 0
type
¿¿0 4
:
¿¿4 5
$str
¿¿6 C
,
¿¿C D
nullable
¿¿E M
:
¿¿M N
false
¿¿O T
)
¿¿T U
,
¿¿U V
Description
¡¡ 
=
¡¡  !
table
¡¡" '
.
¡¡' (
Column
¡¡( .
<
¡¡. /
string
¡¡/ 5
>
¡¡5 6
(
¡¡6 7
type
¡¡7 ;
:
¡¡; <
$str
¡¡= K
,
¡¡K L
nullable
¡¡M U
:
¡¡U V
false
¡¡W \
)
¡¡\ ]
,
¡¡] ^
Image
¬¬ 
=
¬¬ 
table
¬¬ !
.
¬¬! "
Column
¬¬" (
<
¬¬( )
string
¬¬) /
>
¬¬/ 0
(
¬¬0 1
type
¬¬1 5
:
¬¬5 6
$str
¬¬7 E
,
¬¬E F
nullable
¬¬G O
:
¬¬O P
false
¬¬Q V
)
¬¬V W
,
¬¬W X"
IdCategoryRestaurant
√√ (
=
√√) *
table
√√+ 0
.
√√0 1
Column
√√1 7
<
√√7 8
Guid
√√8 <
>
√√< =
(
√√= >
type
√√> B
:
√√B C
$str
√√D J
,
√√J K
nullable
√√L T
:
√√T U
false
√√V [
)
√√[ \
,
√√\ ]!
IdAddressRestaurant
ƒƒ '
=
ƒƒ( )
table
ƒƒ* /
.
ƒƒ/ 0
Column
ƒƒ0 6
<
ƒƒ6 7
Guid
ƒƒ7 ;
>
ƒƒ; <
(
ƒƒ< =
type
ƒƒ= A
:
ƒƒA B
$str
ƒƒC I
,
ƒƒI J
nullable
ƒƒK S
:
ƒƒS T
false
ƒƒU Z
)
ƒƒZ [
,
ƒƒ[ \
	CreatedAt
≈≈ 
=
≈≈ 
table
≈≈  %
.
≈≈% &
Column
≈≈& ,
<
≈≈, -
DateTime
≈≈- 5
>
≈≈5 6
(
≈≈6 7
type
≈≈7 ;
:
≈≈; <
$str
≈≈= W
,
≈≈W X
nullable
≈≈Y a
:
≈≈a b
false
≈≈c h
)
≈≈h i
,
≈≈i j
	UpdatedAt
∆∆ 
=
∆∆ 
table
∆∆  %
.
∆∆% &
Column
∆∆& ,
<
∆∆, -
DateTime
∆∆- 5
>
∆∆5 6
(
∆∆6 7
type
∆∆7 ;
:
∆∆; <
$str
∆∆= W
,
∆∆W X
nullable
∆∆Y a
:
∆∆a b
false
∆∆c h
)
∆∆h i
}
«« 
,
«« 
constraints
»» 
:
»» 
table
»» "
=>
»»# %
{
…… 
table
   
.
   

PrimaryKey
   $
(
  $ %
$str
  % 4
,
  4 5
x
  6 7
=>
  8 :
x
  ; <
.
  < =
Id
  = ?
)
  ? @
;
  @ A
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ T
,
ÃÃT U
column
ÕÕ 
:
ÕÕ 
x
ÕÕ  !
=>
ÕÕ" $
x
ÕÕ% &
.
ÕÕ& '!
IdAddressRestaurant
ÕÕ' :
,
ÕÕ: ;
principalSchema
ŒŒ '
:
ŒŒ' (
$str
ŒŒ) 1
,
ŒŒ1 2
principalTable
œœ &
:
œœ& '
$str
œœ( <
,
œœ< =
principalColumn
–– '
:
––' (
$str
––) -
)
––- .
;
––. /
table
—— 
.
—— 

ForeignKey
—— $
(
——$ %
name
““ 
:
““ 
$str
““ V
,
““V W
column
”” 
:
”” 
x
””  !
=>
””" $
x
””% &
.
””& '"
IdCategoryRestaurant
””' ;
,
””; <
principalSchema
‘‘ '
:
‘‘' (
$str
‘‘) 1
,
‘‘1 2
principalTable
’’ &
:
’’& '
$str
’’( =
,
’’= >
principalColumn
÷÷ '
:
÷÷' (
$str
÷÷) -
)
÷÷- .
;
÷÷. /
}
◊◊ 
)
◊◊ 
;
◊◊ 
migrationBuilder
ŸŸ 
.
ŸŸ 
CreateTable
ŸŸ (
(
ŸŸ( )
name
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ #
,
⁄⁄# $
schema
€€ 
:
€€ 
$str
€€  
,
€€  !
columns
‹‹ 
:
‹‹ 
table
‹‹ 
=>
‹‹ !
new
‹‹" %
{
›› 
Id
ﬁﬁ 
=
ﬁﬁ 
table
ﬁﬁ 
.
ﬁﬁ 
Column
ﬁﬁ %
<
ﬁﬁ% &
Guid
ﬁﬁ& *
>
ﬁﬁ* +
(
ﬁﬁ+ ,
type
ﬁﬁ, 0
:
ﬁﬁ0 1
$str
ﬁﬁ2 8
,
ﬁﬁ8 9
nullable
ﬁﬁ: B
:
ﬁﬁB C
false
ﬁﬁD I
)
ﬁﬁI J
,
ﬁﬁJ K
IdProfileUser
ﬂﬂ !
=
ﬂﬂ" #
table
ﬂﬂ$ )
.
ﬂﬂ) *
Column
ﬂﬂ* 0
<
ﬂﬂ0 1
Guid
ﬂﬂ1 5
>
ﬂﬂ5 6
(
ﬂﬂ6 7
type
ﬂﬂ7 ;
:
ﬂﬂ; <
$str
ﬂﬂ= C
,
ﬂﬂC D
nullable
ﬂﬂE M
:
ﬂﬂM N
false
ﬂﬂO T
)
ﬂﬂT U
,
ﬂﬂU V
UserName
‡‡ 
=
‡‡ 
table
‡‡ $
.
‡‡$ %
Column
‡‡% +
<
‡‡+ ,
string
‡‡, 2
>
‡‡2 3
(
‡‡3 4
type
‡‡4 8
:
‡‡8 9
$str
‡‡: R
,
‡‡R S
	maxLength
‡‡T ]
:
‡‡] ^
$num
‡‡_ b
,
‡‡b c
nullable
‡‡d l
:
‡‡l m
true
‡‡n r
)
‡‡r s
,
‡‡s t 
NormalizedUserName
·· &
=
··' (
table
··) .
.
··. /
Column
··/ 5
<
··5 6
string
··6 <
>
··< =
(
··= >
type
··> B
:
··B C
$str
··D \
,
··\ ]
	maxLength
··^ g
:
··g h
$num
··i l
,
··l m
nullable
··n v
:
··v w
true
··x |
)
··| }
,
··} ~
Email
‚‚ 
=
‚‚ 
table
‚‚ !
.
‚‚! "
Column
‚‚" (
<
‚‚( )
string
‚‚) /
>
‚‚/ 0
(
‚‚0 1
type
‚‚1 5
:
‚‚5 6
$str
‚‚7 O
,
‚‚O P
	maxLength
‚‚Q Z
:
‚‚Z [
$num
‚‚\ _
,
‚‚_ `
nullable
‚‚a i
:
‚‚i j
true
‚‚k o
)
‚‚o p
,
‚‚p q
NormalizedEmail
„„ #
=
„„$ %
table
„„& +
.
„„+ ,
Column
„„, 2
<
„„2 3
string
„„3 9
>
„„9 :
(
„„: ;
type
„„; ?
:
„„? @
$str
„„A Y
,
„„Y Z
	maxLength
„„[ d
:
„„d e
$num
„„f i
,
„„i j
nullable
„„k s
:
„„s t
true
„„u y
)
„„y z
,
„„z {
EmailConfirmed
‰‰ "
=
‰‰# $
table
‰‰% *
.
‰‰* +
Column
‰‰+ 1
<
‰‰1 2
bool
‰‰2 6
>
‰‰6 7
(
‰‰7 8
type
‰‰8 <
:
‰‰< =
$str
‰‰> G
,
‰‰G H
nullable
‰‰I Q
:
‰‰Q R
false
‰‰S X
)
‰‰X Y
,
‰‰Y Z
PasswordHash
ÂÂ  
=
ÂÂ! "
table
ÂÂ# (
.
ÂÂ( )
Column
ÂÂ) /
<
ÂÂ/ 0
string
ÂÂ0 6
>
ÂÂ6 7
(
ÂÂ7 8
type
ÂÂ8 <
:
ÂÂ< =
$str
ÂÂ> D
,
ÂÂD E
nullable
ÂÂF N
:
ÂÂN O
true
ÂÂP T
)
ÂÂT U
,
ÂÂU V
SecurityStamp
ÊÊ !
=
ÊÊ" #
table
ÊÊ$ )
.
ÊÊ) *
Column
ÊÊ* 0
<
ÊÊ0 1
string
ÊÊ1 7
>
ÊÊ7 8
(
ÊÊ8 9
type
ÊÊ9 =
:
ÊÊ= >
$str
ÊÊ? E
,
ÊÊE F
nullable
ÊÊG O
:
ÊÊO P
true
ÊÊQ U
)
ÊÊU V
,
ÊÊV W
ConcurrencyStamp
ÁÁ $
=
ÁÁ% &
table
ÁÁ' ,
.
ÁÁ, -
Column
ÁÁ- 3
<
ÁÁ3 4
string
ÁÁ4 :
>
ÁÁ: ;
(
ÁÁ; <
type
ÁÁ< @
:
ÁÁ@ A
$str
ÁÁB H
,
ÁÁH I
nullable
ÁÁJ R
:
ÁÁR S
true
ÁÁT X
)
ÁÁX Y
,
ÁÁY Z
PhoneNumber
ËË 
=
ËË  !
table
ËË" '
.
ËË' (
Column
ËË( .
<
ËË. /
string
ËË/ 5
>
ËË5 6
(
ËË6 7
type
ËË7 ;
:
ËË; <
$str
ËË= C
,
ËËC D
nullable
ËËE M
:
ËËM N
true
ËËO S
)
ËËS T
,
ËËT U"
PhoneNumberConfirmed
ÈÈ (
=
ÈÈ) *
table
ÈÈ+ 0
.
ÈÈ0 1
Column
ÈÈ1 7
<
ÈÈ7 8
bool
ÈÈ8 <
>
ÈÈ< =
(
ÈÈ= >
type
ÈÈ> B
:
ÈÈB C
$str
ÈÈD M
,
ÈÈM N
nullable
ÈÈO W
:
ÈÈW X
false
ÈÈY ^
)
ÈÈ^ _
,
ÈÈ_ `
TwoFactorEnabled
ÍÍ $
=
ÍÍ% &
table
ÍÍ' ,
.
ÍÍ, -
Column
ÍÍ- 3
<
ÍÍ3 4
bool
ÍÍ4 8
>
ÍÍ8 9
(
ÍÍ9 :
type
ÍÍ: >
:
ÍÍ> ?
$str
ÍÍ@ I
,
ÍÍI J
nullable
ÍÍK S
:
ÍÍS T
false
ÍÍU Z
)
ÍÍZ [
,
ÍÍ[ \

LockoutEnd
ÎÎ 
=
ÎÎ  
table
ÎÎ! &
.
ÎÎ& '
Column
ÎÎ' -
<
ÎÎ- .
DateTimeOffset
ÎÎ. <
>
ÎÎ< =
(
ÎÎ= >
type
ÎÎ> B
:
ÎÎB C
$str
ÎÎD ^
,
ÎÎ^ _
nullable
ÎÎ` h
:
ÎÎh i
true
ÎÎj n
)
ÎÎn o
,
ÎÎo p
LockoutEnabled
ÏÏ "
=
ÏÏ# $
table
ÏÏ% *
.
ÏÏ* +
Column
ÏÏ+ 1
<
ÏÏ1 2
bool
ÏÏ2 6
>
ÏÏ6 7
(
ÏÏ7 8
type
ÏÏ8 <
:
ÏÏ< =
$str
ÏÏ> G
,
ÏÏG H
nullable
ÏÏI Q
:
ÏÏQ R
false
ÏÏS X
)
ÏÏX Y
,
ÏÏY Z
AccessFailedCount
ÌÌ %
=
ÌÌ& '
table
ÌÌ( -
.
ÌÌ- .
Column
ÌÌ. 4
<
ÌÌ4 5
int
ÌÌ5 8
>
ÌÌ8 9
(
ÌÌ9 :
type
ÌÌ: >
:
ÌÌ> ?
$str
ÌÌ@ I
,
ÌÌI J
nullable
ÌÌK S
:
ÌÌS T
false
ÌÌU Z
)
ÌÌZ [
}
ÓÓ 
,
ÓÓ 
constraints
ÔÔ 
:
ÔÔ 
table
ÔÔ "
=>
ÔÔ# %
{
 
table
ÒÒ 
.
ÒÒ 

PrimaryKey
ÒÒ $
(
ÒÒ$ %
$str
ÒÒ% 5
,
ÒÒ5 6
x
ÒÒ7 8
=>
ÒÒ9 ;
x
ÒÒ< =
.
ÒÒ= >
Id
ÒÒ> @
)
ÒÒ@ A
;
ÒÒA B
table
ÚÚ 
.
ÚÚ 

ForeignKey
ÚÚ $
(
ÚÚ$ %
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ I
,
ÛÛI J
column
ÙÙ 
:
ÙÙ 
x
ÙÙ  !
=>
ÙÙ" $
x
ÙÙ% &
.
ÙÙ& '
IdProfileUser
ÙÙ' 4
,
ÙÙ4 5
principalSchema
ıı '
:
ıı' (
$str
ıı) 1
,
ıı1 2
principalTable
ˆˆ &
:
ˆˆ& '
$str
ˆˆ( 6
,
ˆˆ6 7
principalColumn
˜˜ '
:
˜˜' (
$str
˜˜) -
)
˜˜- .
;
˜˜. /
}
¯¯ 
)
¯¯ 
;
¯¯ 
migrationBuilder
˙˙ 
.
˙˙ 
CreateTable
˙˙ (
(
˙˙( )
name
˚˚ 
:
˚˚ 
$str
˚˚ 
,
˚˚ 
schema
¸¸ 
:
¸¸ 
$str
¸¸  
,
¸¸  !
columns
˝˝ 
:
˝˝ 
table
˝˝ 
=>
˝˝ !
new
˝˝" %
{
˛˛ 
Id
ˇˇ 
=
ˇˇ 
table
ˇˇ 
.
ˇˇ 
Column
ˇˇ %
<
ˇˇ% &
Guid
ˇˇ& *
>
ˇˇ* +
(
ˇˇ+ ,
type
ˇˇ, 0
:
ˇˇ0 1
$str
ˇˇ2 8
,
ˇˇ8 9
nullable
ˇˇ: B
:
ˇˇB C
false
ˇˇD I
)
ˇˇI J
,
ˇˇJ K
Price
ÄÄ 
=
ÄÄ 
table
ÄÄ !
.
ÄÄ! "
Column
ÄÄ" (
<
ÄÄ( )
decimal
ÄÄ) 0
>
ÄÄ0 1
(
ÄÄ1 2
type
ÄÄ2 6
:
ÄÄ6 7
$str
ÄÄ8 A
,
ÄÄA B
nullable
ÄÄC K
:
ÄÄK L
false
ÄÄM R
)
ÄÄR S
,
ÄÄS T
OrderStatus
ÅÅ 
=
ÅÅ  !
table
ÅÅ" '
.
ÅÅ' (
Column
ÅÅ( .
<
ÅÅ. /
int
ÅÅ/ 2
>
ÅÅ2 3
(
ÅÅ3 4
type
ÅÅ4 8
:
ÅÅ8 9
$str
ÅÅ: C
,
ÅÅC D
nullable
ÅÅE M
:
ÅÅM N
false
ÅÅO T
)
ÅÅT U
,
ÅÅU V
IdCoupon
ÇÇ 
=
ÇÇ 
table
ÇÇ $
.
ÇÇ$ %
Column
ÇÇ% +
<
ÇÇ+ ,
Guid
ÇÇ, 0
>
ÇÇ0 1
(
ÇÇ1 2
type
ÇÇ2 6
:
ÇÇ6 7
$str
ÇÇ8 >
,
ÇÇ> ?
nullable
ÇÇ@ H
:
ÇÇH I
true
ÇÇJ N
)
ÇÇN O
,
ÇÇO P
IdProfileUser
ÉÉ !
=
ÉÉ" #
table
ÉÉ$ )
.
ÉÉ) *
Column
ÉÉ* 0
<
ÉÉ0 1
Guid
ÉÉ1 5
>
ÉÉ5 6
(
ÉÉ6 7
type
ÉÉ7 ;
:
ÉÉ; <
$str
ÉÉ= C
,
ÉÉC D
nullable
ÉÉE M
:
ÉÉM N
true
ÉÉO S
)
ÉÉS T
,
ÉÉT U
	CreatedAt
ÑÑ 
=
ÑÑ 
table
ÑÑ  %
.
ÑÑ% &
Column
ÑÑ& ,
<
ÑÑ, -
DateTime
ÑÑ- 5
>
ÑÑ5 6
(
ÑÑ6 7
type
ÑÑ7 ;
:
ÑÑ; <
$str
ÑÑ= W
,
ÑÑW X
nullable
ÑÑY a
:
ÑÑa b
false
ÑÑc h
)
ÑÑh i
,
ÑÑi j
	UpdatedAt
ÖÖ 
=
ÖÖ 
table
ÖÖ  %
.
ÖÖ% &
Column
ÖÖ& ,
<
ÖÖ, -
DateTime
ÖÖ- 5
>
ÖÖ5 6
(
ÖÖ6 7
type
ÖÖ7 ;
:
ÖÖ; <
$str
ÖÖ= W
,
ÖÖW X
nullable
ÖÖY a
:
ÖÖa b
false
ÖÖc h
)
ÖÖh i
}
ÜÜ 
,
ÜÜ 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
àà 
table
ââ 
.
ââ 

PrimaryKey
ââ $
(
ââ$ %
$str
ââ% 0
,
ââ0 1
x
ââ2 3
=>
ââ4 6
x
ââ7 8
.
ââ8 9
Id
ââ9 ;
)
ââ; <
;
ââ< =
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
ãã 
:
ãã 
$str
ãã :
,
ãã: ;
column
åå 
:
åå 
x
åå  !
=>
åå" $
x
åå% &
.
åå& '
IdCoupon
åå' /
,
åå/ 0
principalSchema
çç '
:
çç' (
$str
çç) 1
,
çç1 2
principalTable
éé &
:
éé& '
$str
éé( 1
,
éé1 2
principalColumn
èè '
:
èè' (
$str
èè) -
)
èè- .
;
èè. /
table
êê 
.
êê 

ForeignKey
êê $
(
êê$ %
name
ëë 
:
ëë 
$str
ëë D
,
ëëD E
column
íí 
:
íí 
x
íí  !
=>
íí" $
x
íí% &
.
íí& '
IdProfileUser
íí' 4
,
íí4 5
principalSchema
ìì '
:
ìì' (
$str
ìì) 1
,
ìì1 2
principalTable
îî &
:
îî& '
$str
îî( 6
,
îî6 7
principalColumn
ïï '
:
ïï' (
$str
ïï) -
)
ïï- .
;
ïï. /
}
ññ 
)
ññ 
;
ññ 
migrationBuilder
òò 
.
òò 
CreateTable
òò (
(
òò( )
name
ôô 
:
ôô 
$str
ôô 
,
ôô  
schema
öö 
:
öö 
$str
öö  
,
öö  !
columns
õõ 
:
õõ 
table
õõ 
=>
õõ !
new
õõ" %
{
úú 
Id
ùù 
=
ùù 
table
ùù 
.
ùù 
Column
ùù %
<
ùù% &
Guid
ùù& *
>
ùù* +
(
ùù+ ,
type
ùù, 0
:
ùù0 1
$str
ùù2 8
,
ùù8 9
nullable
ùù: B
:
ùùB C
false
ùùD I
)
ùùI J
,
ùùJ K
Text
ûû 
=
ûû 
table
ûû  
.
ûû  !
Column
ûû! '
<
ûû' (
string
ûû( .
>
ûû. /
(
ûû/ 0
type
ûû0 4
:
ûû4 5
$str
ûû6 D
,
ûûD E
nullable
ûûF N
:
ûûN O
false
ûûP U
)
ûûU V
,
ûûV W
Starts
üü 
=
üü 
table
üü "
.
üü" #
Column
üü# )
<
üü) *
decimal
üü* 1
>
üü1 2
(
üü2 3
type
üü3 7
:
üü7 8
$str
üü9 B
,
üüB C
nullable
üüD L
:
üüL M
false
üüN S
)
üüS T
,
üüT U
IdRestaurant
††  
=
††! "
table
††# (
.
††( )
Column
††) /
<
††/ 0
Guid
††0 4
>
††4 5
(
††5 6
type
††6 :
:
††: ;
$str
††< B
,
††B C
nullable
††D L
:
††L M
false
††N S
)
††S T
,
††T U
	CreatedAt
°° 
=
°° 
table
°°  %
.
°°% &
Column
°°& ,
<
°°, -
DateTime
°°- 5
>
°°5 6
(
°°6 7
type
°°7 ;
:
°°; <
$str
°°= W
,
°°W X
nullable
°°Y a
:
°°a b
false
°°c h
)
°°h i
,
°°i j
	UpdatedAt
¢¢ 
=
¢¢ 
table
¢¢  %
.
¢¢% &
Column
¢¢& ,
<
¢¢, -
DateTime
¢¢- 5
>
¢¢5 6
(
¢¢6 7
type
¢¢7 ;
:
¢¢; <
$str
¢¢= W
,
¢¢W X
nullable
¢¢Y a
:
¢¢a b
false
¢¢c h
)
¢¢h i
}
££ 
,
££ 
constraints
§§ 
:
§§ 
table
§§ "
=>
§§# %
{
•• 
table
¶¶ 
.
¶¶ 

PrimaryKey
¶¶ $
(
¶¶$ %
$str
¶¶% 1
,
¶¶1 2
x
¶¶3 4
=>
¶¶5 7
x
¶¶8 9
.
¶¶9 :
Id
¶¶: <
)
¶¶< =
;
¶¶= >
table
ßß 
.
ßß 

ForeignKey
ßß $
(
ßß$ %
name
®® 
:
®® 
$str
®® B
,
®®B C
column
©© 
:
©© 
x
©©  !
=>
©©" $
x
©©% &
.
©©& '
IdRestaurant
©©' 3
,
©©3 4
principalSchema
™™ '
:
™™' (
$str
™™) 1
,
™™1 2
principalTable
´´ &
:
´´& '
$str
´´( 4
,
´´4 5
principalColumn
¨¨ '
:
¨¨' (
$str
¨¨) -
)
¨¨- .
;
¨¨. /
}
≠≠ 
)
≠≠ 
;
≠≠ 
migrationBuilder
ØØ 
.
ØØ 
CreateTable
ØØ (
(
ØØ( )
name
∞∞ 
:
∞∞ 
$str
∞∞  
,
∞∞  !
schema
±± 
:
±± 
$str
±±  
,
±±  !
columns
≤≤ 
:
≤≤ 
table
≤≤ 
=>
≤≤ !
new
≤≤" %
{
≥≥ 
Id
¥¥ 
=
¥¥ 
table
¥¥ 
.
¥¥ 
Column
¥¥ %
<
¥¥% &
Guid
¥¥& *
>
¥¥* +
(
¥¥+ ,
type
¥¥, 0
:
¥¥0 1
$str
¥¥2 8
,
¥¥8 9
nullable
¥¥: B
:
¥¥B C
false
¥¥D I
)
¥¥I J
,
¥¥J K
Name
µµ 
=
µµ 
table
µµ  
.
µµ  !
Column
µµ! '
<
µµ' (
string
µµ( .
>
µµ. /
(
µµ/ 0
type
µµ0 4
:
µµ4 5
$str
µµ6 C
,
µµC D
nullable
µµE M
:
µµM N
false
µµO T
)
µµT U
,
µµU V
Description
∂∂ 
=
∂∂  !
table
∂∂" '
.
∂∂' (
Column
∂∂( .
<
∂∂. /
string
∂∂/ 5
>
∂∂5 6
(
∂∂6 7
type
∂∂7 ;
:
∂∂; <
$str
∂∂= K
,
∂∂K L
nullable
∂∂M U
:
∂∂U V
false
∂∂W \
)
∂∂\ ]
,
∂∂] ^
Price
∑∑ 
=
∑∑ 
table
∑∑ !
.
∑∑! "
Column
∑∑" (
<
∑∑( )
decimal
∑∑) 0
>
∑∑0 1
(
∑∑1 2
type
∑∑2 6
:
∑∑6 7
$str
∑∑8 A
,
∑∑A B
nullable
∑∑C K
:
∑∑K L
false
∑∑M R
)
∑∑R S
,
∑∑S T
Vegan
∏∏ 
=
∏∏ 
table
∏∏ !
.
∏∏! "
Column
∏∏" (
<
∏∏( )
bool
∏∏) -
>
∏∏- .
(
∏∏. /
type
∏∏/ 3
:
∏∏3 4
$str
∏∏5 >
,
∏∏> ?
nullable
∏∏@ H
:
∏∏H I
false
∏∏J O
)
∏∏O P
,
∏∏P Q

Vegetarian
ππ 
=
ππ  
table
ππ! &
.
ππ& '
Column
ππ' -
<
ππ- .
bool
ππ. 2
>
ππ2 3
(
ππ3 4
type
ππ4 8
:
ππ8 9
$str
ππ: C
,
ππC D
nullable
ππE M
:
ππM N
false
ππO T
)
ππT U
,
ππU V
Kosher
∫∫ 
=
∫∫ 
table
∫∫ "
.
∫∫" #
Column
∫∫# )
<
∫∫) *
bool
∫∫* .
>
∫∫. /
(
∫∫/ 0
type
∫∫0 4
:
∫∫4 5
$str
∫∫6 ?
,
∫∫? @
nullable
∫∫A I
:
∫∫I J
false
∫∫K P
)
∫∫P Q
,
∫∫Q R
Image
ªª 
=
ªª 
table
ªª !
.
ªª! "
Column
ªª" (
<
ªª( )
string
ªª) /
>
ªª/ 0
(
ªª0 1
type
ªª1 5
:
ªª5 6
$str
ªª7 E
,
ªªE F
nullable
ªªG O
:
ªªO P
false
ªªQ V
)
ªªV W
,
ªªW X
IdCategoryProduct
ºº %
=
ºº& '
table
ºº( -
.
ºº- .
Column
ºº. 4
<
ºº4 5
Guid
ºº5 9
>
ºº9 :
(
ºº: ;
type
ºº; ?
:
ºº? @
$str
ººA G
,
ººG H
nullable
ººI Q
:
ººQ R
false
ººS X
)
ººX Y
,
ººY Z
IdRestaurant
ΩΩ  
=
ΩΩ! "
table
ΩΩ# (
.
ΩΩ( )
Column
ΩΩ) /
<
ΩΩ/ 0
Guid
ΩΩ0 4
>
ΩΩ4 5
(
ΩΩ5 6
type
ΩΩ6 :
:
ΩΩ: ;
$str
ΩΩ< B
,
ΩΩB C
nullable
ΩΩD L
:
ΩΩL M
false
ΩΩN S
)
ΩΩS T
,
ΩΩT U
	CreatedAt
ææ 
=
ææ 
table
ææ  %
.
ææ% &
Column
ææ& ,
<
ææ, -
DateTime
ææ- 5
>
ææ5 6
(
ææ6 7
type
ææ7 ;
:
ææ; <
$str
ææ= W
,
ææW X
nullable
ææY a
:
ææa b
false
ææc h
)
ææh i
,
ææi j
	UpdatedAt
øø 
=
øø 
table
øø  %
.
øø% &
Column
øø& ,
<
øø, -
DateTime
øø- 5
>
øø5 6
(
øø6 7
type
øø7 ;
:
øø; <
$str
øø= W
,
øøW X
nullable
øøY a
:
øøa b
false
øøc h
)
øøh i
}
¿¿ 
,
¿¿ 
constraints
¡¡ 
:
¡¡ 
table
¡¡ "
=>
¡¡# %
{
¬¬ 
table
√√ 
.
√√ 

PrimaryKey
√√ $
(
√√$ %
$str
√√% 2
,
√√2 3
x
√√4 5
=>
√√6 8
x
√√9 :
.
√√: ;
Id
√√; =
)
√√= >
;
√√> ?
table
ƒƒ 
.
ƒƒ 

ForeignKey
ƒƒ $
(
ƒƒ$ %
name
≈≈ 
:
≈≈ 
$str
≈≈ N
,
≈≈N O
column
∆∆ 
:
∆∆ 
x
∆∆  !
=>
∆∆" $
x
∆∆% &
.
∆∆& '
IdCategoryProduct
∆∆' 8
,
∆∆8 9
principalSchema
«« '
:
««' (
$str
««) 1
,
««1 2
principalTable
»» &
:
»»& '
$str
»»( :
,
»»: ;
principalColumn
…… '
:
……' (
$str
……) -
)
……- .
;
……. /
table
   
.
   

ForeignKey
   $
(
  $ %
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ C
,
ÀÀC D
column
ÃÃ 
:
ÃÃ 
x
ÃÃ  !
=>
ÃÃ" $
x
ÃÃ% &
.
ÃÃ& '
IdRestaurant
ÃÃ' 3
,
ÃÃ3 4
principalSchema
ÕÕ '
:
ÕÕ' (
$str
ÕÕ) 1
,
ÕÕ1 2
principalTable
ŒŒ &
:
ŒŒ& '
$str
ŒŒ( 4
,
ŒŒ4 5
principalColumn
œœ '
:
œœ' (
$str
œœ) -
)
œœ- .
;
œœ. /
}
–– 
)
–– 
;
–– 
migrationBuilder
““ 
.
““ 
CreateTable
““ (
(
““( )
name
”” 
:
”” 
$str
”” (
,
””( )
schema
‘‘ 
:
‘‘ 
$str
‘‘  
,
‘‘  !
columns
’’ 
:
’’ 
table
’’ 
=>
’’ !
new
’’" %
{
÷÷ 
Id
◊◊ 
=
◊◊ 
table
◊◊ 
.
◊◊ 
Column
◊◊ %
<
◊◊% &
int
◊◊& )
>
◊◊) *
(
◊◊* +
type
◊◊+ /
:
◊◊/ 0
$str
◊◊1 :
,
◊◊: ;
nullable
◊◊< D
:
◊◊D E
false
◊◊F K
)
◊◊K L
.
ÿÿ 

Annotation
ÿÿ #
(
ÿÿ# $
$str
ÿÿ$ D
,
ÿÿD E+
NpgsqlValueGenerationStrategy
ÿÿF c
.
ÿÿc d%
IdentityByDefaultColumn
ÿÿd {
)
ÿÿ{ |
,
ÿÿ| }
UserId
ŸŸ 
=
ŸŸ 
table
ŸŸ "
.
ŸŸ" #
Column
ŸŸ# )
<
ŸŸ) *
Guid
ŸŸ* .
>
ŸŸ. /
(
ŸŸ/ 0
type
ŸŸ0 4
:
ŸŸ4 5
$str
ŸŸ6 <
,
ŸŸ< =
nullable
ŸŸ> F
:
ŸŸF G
false
ŸŸH M
)
ŸŸM N
,
ŸŸN O
	ClaimType
⁄⁄ 
=
⁄⁄ 
table
⁄⁄  %
.
⁄⁄% &
Column
⁄⁄& ,
<
⁄⁄, -
string
⁄⁄- 3
>
⁄⁄3 4
(
⁄⁄4 5
type
⁄⁄5 9
:
⁄⁄9 :
$str
⁄⁄; A
,
⁄⁄A B
nullable
⁄⁄C K
:
⁄⁄K L
true
⁄⁄M Q
)
⁄⁄Q R
,
⁄⁄R S

ClaimValue
€€ 
=
€€  
table
€€! &
.
€€& '
Column
€€' -
<
€€- .
string
€€. 4
>
€€4 5
(
€€5 6
type
€€6 :
:
€€: ;
$str
€€< B
,
€€B C
nullable
€€D L
:
€€L M
true
€€N R
)
€€R S
}
‹‹ 
,
‹‹ 
constraints
›› 
:
›› 
table
›› "
=>
››# %
{
ﬁﬁ 
table
ﬂﬂ 
.
ﬂﬂ 

PrimaryKey
ﬂﬂ $
(
ﬂﬂ$ %
$str
ﬂﬂ% :
,
ﬂﬂ: ;
x
ﬂﬂ< =
=>
ﬂﬂ> @
x
ﬂﬂA B
.
ﬂﬂB C
Id
ﬂﬂC E
)
ﬂﬂE F
;
ﬂﬂF G
table
‡‡ 
.
‡‡ 

ForeignKey
‡‡ $
(
‡‡$ %
name
·· 
:
·· 
$str
·· F
,
··F G
column
‚‚ 
:
‚‚ 
x
‚‚  !
=>
‚‚" $
x
‚‚% &
.
‚‚& '
UserId
‚‚' -
,
‚‚- .
principalSchema
„„ '
:
„„' (
$str
„„) 1
,
„„1 2
principalTable
‰‰ &
:
‰‰& '
$str
‰‰( 5
,
‰‰5 6
principalColumn
ÂÂ '
:
ÂÂ' (
$str
ÂÂ) -
,
ÂÂ- .
onDelete
ÊÊ  
:
ÊÊ  !
ReferentialAction
ÊÊ" 3
.
ÊÊ3 4
Cascade
ÊÊ4 ;
)
ÊÊ; <
;
ÊÊ< =
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateTable
ÈÈ (
(
ÈÈ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ (
,
ÍÍ( )
schema
ÎÎ 
:
ÎÎ 
$str
ÎÎ  
,
ÎÎ  !
columns
ÏÏ 
:
ÏÏ 
table
ÏÏ 
=>
ÏÏ !
new
ÏÏ" %
{
ÌÌ 
LoginProvider
ÓÓ !
=
ÓÓ" #
table
ÓÓ$ )
.
ÓÓ) *
Column
ÓÓ* 0
<
ÓÓ0 1
string
ÓÓ1 7
>
ÓÓ7 8
(
ÓÓ8 9
type
ÓÓ9 =
:
ÓÓ= >
$str
ÓÓ? W
,
ÓÓW X
	maxLength
ÓÓY b
:
ÓÓb c
$num
ÓÓd g
,
ÓÓg h
nullable
ÓÓi q
:
ÓÓq r
false
ÓÓs x
)
ÓÓx y
,
ÓÓy z
ProviderKey
ÔÔ 
=
ÔÔ  !
table
ÔÔ" '
.
ÔÔ' (
Column
ÔÔ( .
<
ÔÔ. /
string
ÔÔ/ 5
>
ÔÔ5 6
(
ÔÔ6 7
type
ÔÔ7 ;
:
ÔÔ; <
$str
ÔÔ= U
,
ÔÔU V
	maxLength
ÔÔW `
:
ÔÔ` a
$num
ÔÔb e
,
ÔÔe f
nullable
ÔÔg o
:
ÔÔo p
false
ÔÔq v
)
ÔÔv w
,
ÔÔw x!
ProviderDisplayName
 '
=
( )
table
* /
.
/ 0
Column
0 6
<
6 7
string
7 =
>
= >
(
> ?
type
? C
:
C D
$str
E K
,
K L
nullable
M U
:
U V
true
W [
)
[ \
,
\ ]
UserId
ÒÒ 
=
ÒÒ 
table
ÒÒ "
.
ÒÒ" #
Column
ÒÒ# )
<
ÒÒ) *
Guid
ÒÒ* .
>
ÒÒ. /
(
ÒÒ/ 0
type
ÒÒ0 4
:
ÒÒ4 5
$str
ÒÒ6 <
,
ÒÒ< =
nullable
ÒÒ> F
:
ÒÒF G
false
ÒÒH M
)
ÒÒM N
}
ÚÚ 
,
ÚÚ 
constraints
ÛÛ 
:
ÛÛ 
table
ÛÛ "
=>
ÛÛ# %
{
ÙÙ 
table
ıı 
.
ıı 

PrimaryKey
ıı $
(
ıı$ %
$str
ıı% :
,
ıı: ;
x
ıı< =
=>
ıı> @
new
ııA D
{
ııE F
x
ııG H
.
ııH I
LoginProvider
ııI V
,
ııV W
x
ııX Y
.
ııY Z
ProviderKey
ııZ e
}
ııf g
)
ııg h
;
ııh i
table
ˆˆ 
.
ˆˆ 

ForeignKey
ˆˆ $
(
ˆˆ$ %
name
˜˜ 
:
˜˜ 
$str
˜˜ F
,
˜˜F G
column
¯¯ 
:
¯¯ 
x
¯¯  !
=>
¯¯" $
x
¯¯% &
.
¯¯& '
UserId
¯¯' -
,
¯¯- .
principalSchema
˘˘ '
:
˘˘' (
$str
˘˘) 1
,
˘˘1 2
principalTable
˙˙ &
:
˙˙& '
$str
˙˙( 5
,
˙˙5 6
principalColumn
˚˚ '
:
˚˚' (
$str
˚˚) -
,
˚˚- .
onDelete
¸¸  
:
¸¸  !
ReferentialAction
¸¸" 3
.
¸¸3 4
Cascade
¸¸4 ;
)
¸¸; <
;
¸¸< =
}
˝˝ 
)
˝˝ 
;
˝˝ 
migrationBuilder
ˇˇ 
.
ˇˇ 
CreateTable
ˇˇ (
(
ˇˇ( )
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ '
,
ÄÄ' (
schema
ÅÅ 
:
ÅÅ 
$str
ÅÅ  
,
ÅÅ  !
columns
ÇÇ 
:
ÇÇ 
table
ÇÇ 
=>
ÇÇ !
new
ÇÇ" %
{
ÉÉ 
UserId
ÑÑ 
=
ÑÑ 
table
ÑÑ "
.
ÑÑ" #
Column
ÑÑ# )
<
ÑÑ) *
Guid
ÑÑ* .
>
ÑÑ. /
(
ÑÑ/ 0
type
ÑÑ0 4
:
ÑÑ4 5
$str
ÑÑ6 <
,
ÑÑ< =
nullable
ÑÑ> F
:
ÑÑF G
false
ÑÑH M
)
ÑÑM N
,
ÑÑN O
RoleId
ÖÖ 
=
ÖÖ 
table
ÖÖ "
.
ÖÖ" #
Column
ÖÖ# )
<
ÖÖ) *
Guid
ÖÖ* .
>
ÖÖ. /
(
ÖÖ/ 0
type
ÖÖ0 4
:
ÖÖ4 5
$str
ÖÖ6 <
,
ÖÖ< =
nullable
ÖÖ> F
:
ÖÖF G
false
ÖÖH M
)
ÖÖM N
}
ÜÜ 
,
ÜÜ 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
àà 
table
ââ 
.
ââ 

PrimaryKey
ââ $
(
ââ$ %
$str
ââ% 9
,
ââ9 :
x
ââ; <
=>
ââ= ?
new
ââ@ C
{
ââD E
x
ââF G
.
ââG H
UserId
ââH N
,
ââN O
x
ââP Q
.
ââQ R
RoleId
ââR X
}
ââY Z
)
ââZ [
;
ââ[ \
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
ãã 
:
ãã 
$str
ãã E
,
ããE F
column
åå 
:
åå 
x
åå  !
=>
åå" $
x
åå% &
.
åå& '
RoleId
åå' -
,
åå- .
principalSchema
çç '
:
çç' (
$str
çç) 1
,
çç1 2
principalTable
éé &
:
éé& '
$str
éé( 5
,
éé5 6
principalColumn
èè '
:
èè' (
$str
èè) -
,
èè- .
onDelete
êê  
:
êê  !
ReferentialAction
êê" 3
.
êê3 4
Cascade
êê4 ;
)
êê; <
;
êê< =
table
ëë 
.
ëë 

ForeignKey
ëë $
(
ëë$ %
name
íí 
:
íí 
$str
íí E
,
ííE F
column
ìì 
:
ìì 
x
ìì  !
=>
ìì" $
x
ìì% &
.
ìì& '
UserId
ìì' -
,
ìì- .
principalSchema
îî '
:
îî' (
$str
îî) 1
,
îî1 2
principalTable
ïï &
:
ïï& '
$str
ïï( 5
,
ïï5 6
principalColumn
ññ '
:
ññ' (
$str
ññ) -
,
ññ- .
onDelete
óó  
:
óó  !
ReferentialAction
óó" 3
.
óó3 4
Cascade
óó4 ;
)
óó; <
;
óó< =
}
òò 
)
òò 
;
òò 
migrationBuilder
öö 
.
öö 
CreateTable
öö (
(
öö( )
name
õõ 
:
õõ 
$str
õõ (
,
õõ( )
schema
úú 
:
úú 
$str
úú  
,
úú  !
columns
ùù 
:
ùù 
table
ùù 
=>
ùù !
new
ùù" %
{
ûû 
UserId
üü 
=
üü 
table
üü "
.
üü" #
Column
üü# )
<
üü) *
Guid
üü* .
>
üü. /
(
üü/ 0
type
üü0 4
:
üü4 5
$str
üü6 <
,
üü< =
nullable
üü> F
:
üüF G
false
üüH M
)
üüM N
,
üüN O
LoginProvider
†† !
=
††" #
table
††$ )
.
††) *
Column
††* 0
<
††0 1
string
††1 7
>
††7 8
(
††8 9
type
††9 =
:
††= >
$str
††? W
,
††W X
	maxLength
††Y b
:
††b c
$num
††d g
,
††g h
nullable
††i q
:
††q r
false
††s x
)
††x y
,
††y z
Name
°° 
=
°° 
table
°°  
.
°°  !
Column
°°! '
<
°°' (
string
°°( .
>
°°. /
(
°°/ 0
type
°°0 4
:
°°4 5
$str
°°6 N
,
°°N O
	maxLength
°°P Y
:
°°Y Z
$num
°°[ ^
,
°°^ _
nullable
°°` h
:
°°h i
false
°°j o
)
°°o p
,
°°p q
Value
¢¢ 
=
¢¢ 
table
¢¢ !
.
¢¢! "
Column
¢¢" (
<
¢¢( )
string
¢¢) /
>
¢¢/ 0
(
¢¢0 1
type
¢¢1 5
:
¢¢5 6
$str
¢¢7 =
,
¢¢= >
nullable
¢¢? G
:
¢¢G H
true
¢¢I M
)
¢¢M N
}
££ 
,
££ 
constraints
§§ 
:
§§ 
table
§§ "
=>
§§# %
{
•• 
table
¶¶ 
.
¶¶ 

PrimaryKey
¶¶ $
(
¶¶$ %
$str
¶¶% :
,
¶¶: ;
x
¶¶< =
=>
¶¶> @
new
¶¶A D
{
¶¶E F
x
¶¶G H
.
¶¶H I
UserId
¶¶I O
,
¶¶O P
x
¶¶Q R
.
¶¶R S
LoginProvider
¶¶S `
,
¶¶` a
x
¶¶b c
.
¶¶c d
Name
¶¶d h
}
¶¶i j
)
¶¶j k
;
¶¶k l
table
ßß 
.
ßß 

ForeignKey
ßß $
(
ßß$ %
name
®® 
:
®® 
$str
®® F
,
®®F G
column
©© 
:
©© 
x
©©  !
=>
©©" $
x
©©% &
.
©©& '
UserId
©©' -
,
©©- .
principalSchema
™™ '
:
™™' (
$str
™™) 1
,
™™1 2
principalTable
´´ &
:
´´& '
$str
´´( 5
,
´´5 6
principalColumn
¨¨ '
:
¨¨' (
$str
¨¨) -
,
¨¨- .
onDelete
≠≠  
:
≠≠  !
ReferentialAction
≠≠" 3
.
≠≠3 4
Cascade
≠≠4 ;
)
≠≠; <
;
≠≠< =
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
migrationBuilder
∞∞ 
.
∞∞ 
CreateTable
∞∞ (
(
∞∞( )
name
±± 
:
±± 
$str
±± 
,
±± 
schema
≤≤ 
:
≤≤ 
$str
≤≤  
,
≤≤  !
columns
≥≥ 
:
≥≥ 
table
≥≥ 
=>
≥≥ !
new
≥≥" %
{
¥¥ 
Id
µµ 
=
µµ 
table
µµ 
.
µµ 
Column
µµ %
<
µµ% &
Guid
µµ& *
>
µµ* +
(
µµ+ ,
type
µµ, 0
:
µµ0 1
$str
µµ2 8
,
µµ8 9
nullable
µµ: B
:
µµB C
false
µµD I
)
µµI J
,
µµJ K
Price
∂∂ 
=
∂∂ 
table
∂∂ !
.
∂∂! "
Column
∂∂" (
<
∂∂( )
decimal
∂∂) 0
>
∂∂0 1
(
∂∂1 2
type
∂∂2 6
:
∂∂6 7
$str
∂∂8 A
,
∂∂A B
nullable
∂∂C K
:
∂∂K L
false
∂∂M R
)
∂∂R S
,
∂∂S T
Quantity
∑∑ 
=
∑∑ 
table
∑∑ $
.
∑∑$ %
Column
∑∑% +
<
∑∑+ ,
int
∑∑, /
>
∑∑/ 0
(
∑∑0 1
type
∑∑1 5
:
∑∑5 6
$str
∑∑7 @
,
∑∑@ A
nullable
∑∑B J
:
∑∑J K
false
∑∑L Q
)
∑∑Q R
,
∑∑R S
	IdProduct
∏∏ 
=
∏∏ 
table
∏∏  %
.
∏∏% &
Column
∏∏& ,
<
∏∏, -
Guid
∏∏- 1
>
∏∏1 2
(
∏∏2 3
type
∏∏3 7
:
∏∏7 8
$str
∏∏9 ?
,
∏∏? @
nullable
∏∏A I
:
∏∏I J
false
∏∏K P
)
∏∏P Q
,
∏∏Q R
IdOrder
ππ 
=
ππ 
table
ππ #
.
ππ# $
Column
ππ$ *
<
ππ* +
Guid
ππ+ /
>
ππ/ 0
(
ππ0 1
type
ππ1 5
:
ππ5 6
$str
ππ7 =
,
ππ= >
nullable
ππ? G
:
ππG H
false
ππI N
)
ππN O
,
ππO P
	CreatedAt
∫∫ 
=
∫∫ 
table
∫∫  %
.
∫∫% &
Column
∫∫& ,
<
∫∫, -
DateTime
∫∫- 5
>
∫∫5 6
(
∫∫6 7
type
∫∫7 ;
:
∫∫; <
$str
∫∫= W
,
∫∫W X
nullable
∫∫Y a
:
∫∫a b
false
∫∫c h
)
∫∫h i
,
∫∫i j
	UpdatedAt
ªª 
=
ªª 
table
ªª  %
.
ªª% &
Column
ªª& ,
<
ªª, -
DateTime
ªª- 5
>
ªª5 6
(
ªª6 7
type
ªª7 ;
:
ªª; <
$str
ªª= W
,
ªªW X
nullable
ªªY a
:
ªªa b
false
ªªc h
)
ªªh i
}
ºº 
,
ºº 
constraints
ΩΩ 
:
ΩΩ 
table
ΩΩ "
=>
ΩΩ# %
{
ææ 
table
øø 
.
øø 

PrimaryKey
øø $
(
øø$ %
$str
øø% /
,
øø/ 0
x
øø1 2
=>
øø3 5
x
øø6 7
.
øø7 8
Id
øø8 :
)
øø: ;
;
øø; <
table
¿¿ 
.
¿¿ 

ForeignKey
¿¿ $
(
¿¿$ %
name
¡¡ 
:
¡¡ 
$str
¡¡ 7
,
¡¡7 8
column
¬¬ 
:
¬¬ 
x
¬¬  !
=>
¬¬" $
x
¬¬% &
.
¬¬& '
IdOrder
¬¬' .
,
¬¬. /
principalSchema
√√ '
:
√√' (
$str
√√) 1
,
√√1 2
principalTable
ƒƒ &
:
ƒƒ& '
$str
ƒƒ( 0
,
ƒƒ0 1
principalColumn
≈≈ '
:
≈≈' (
$str
≈≈) -
)
≈≈- .
;
≈≈. /
table
∆∆ 
.
∆∆ 

ForeignKey
∆∆ $
(
∆∆$ %
name
«« 
:
«« 
$str
«« ;
,
««; <
column
»» 
:
»» 
x
»»  !
=>
»»" $
x
»»% &
.
»»& '
	IdProduct
»»' 0
,
»»0 1
principalSchema
…… '
:
……' (
$str
……) 1
,
……1 2
principalTable
   &
:
  & '
$str
  ( 2
,
  2 3
principalColumn
ÀÀ '
:
ÀÀ' (
$str
ÀÀ) -
)
ÀÀ- .
;
ÀÀ. /
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
migrationBuilder
ŒŒ 
.
ŒŒ 
CreateIndex
ŒŒ (
(
ŒŒ( )
name
œœ 
:
œœ 
$str
œœ 2
,
œœ2 3
schema
–– 
:
–– 
$str
––  
,
––  !
table
—— 
:
—— 
$str
—— )
,
——) *
column
““ 
:
““ 
$str
““  
)
““  !
;
““! "
migrationBuilder
‘‘ 
.
‘‘ 
CreateIndex
‘‘ (
(
‘‘( )
name
’’ 
:
’’ 
$str
’’ %
,
’’% &
schema
÷÷ 
:
÷÷ 
$str
÷÷  
,
÷÷  !
table
◊◊ 
:
◊◊ 
$str
◊◊ $
,
◊◊$ %
column
ÿÿ 
:
ÿÿ 
$str
ÿÿ (
,
ÿÿ( )
unique
ŸŸ 
:
ŸŸ 
true
ŸŸ 
)
ŸŸ 
;
ŸŸ 
migrationBuilder
€€ 
.
€€ 
CreateIndex
€€ (
(
€€( )
name
‹‹ 
:
‹‹ 
$str
‹‹ 2
,
‹‹2 3
schema
›› 
:
›› 
$str
››  
,
››  !
table
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ )
,
ﬁﬁ) *
column
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ  
)
ﬂﬂ  !
;
ﬂﬂ! "
migrationBuilder
·· 
.
·· 
CreateIndex
·· (
(
··( )
name
‚‚ 
:
‚‚ 
$str
‚‚ 2
,
‚‚2 3
schema
„„ 
:
„„ 
$str
„„  
,
„„  !
table
‰‰ 
:
‰‰ 
$str
‰‰ )
,
‰‰) *
column
ÂÂ 
:
ÂÂ 
$str
ÂÂ  
)
ÂÂ  !
;
ÂÂ! "
migrationBuilder
ÁÁ 
.
ÁÁ 
CreateIndex
ÁÁ (
(
ÁÁ( )
name
ËË 
:
ËË 
$str
ËË 1
,
ËË1 2
schema
ÈÈ 
:
ÈÈ 
$str
ÈÈ  
,
ÈÈ  !
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ (
,
ÍÍ( )
column
ÎÎ 
:
ÎÎ 
$str
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
migrationBuilder
ÌÌ 
.
ÌÌ 
CreateIndex
ÌÌ (
(
ÌÌ( )
name
ÓÓ 
:
ÓÓ 
$str
ÓÓ "
,
ÓÓ" #
schema
ÔÔ 
:
ÔÔ 
$str
ÔÔ  
,
ÔÔ  !
table
 
:
 
$str
 $
,
$ %
column
ÒÒ 
:
ÒÒ 
$str
ÒÒ )
)
ÒÒ) *
;
ÒÒ* +
migrationBuilder
ÛÛ 
.
ÛÛ 
CreateIndex
ÛÛ (
(
ÛÛ( )
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ 4
,
ÙÙ4 5
schema
ıı 
:
ıı 
$str
ıı  
,
ıı  !
table
ˆˆ 
:
ˆˆ 
$str
ˆˆ $
,
ˆˆ$ %
column
˜˜ 
:
˜˜ 
$str
˜˜ '
)
˜˜' (
;
˜˜( )
migrationBuilder
˘˘ 
.
˘˘ 
CreateIndex
˘˘ (
(
˘˘( )
name
˙˙ 
:
˙˙ 
$str
˙˙ %
,
˙˙% &
schema
˚˚ 
:
˚˚ 
$str
˚˚  
,
˚˚  !
table
¸¸ 
:
¸¸ 
$str
¸¸ $
,
¸¸$ %
column
˝˝ 
:
˝˝ 
$str
˝˝ ,
,
˝˝, -
unique
˛˛ 
:
˛˛ 
true
˛˛ 
)
˛˛ 
;
˛˛ 
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ /
,
ÅÅ/ 0
schema
ÇÇ 
:
ÇÇ 
$str
ÇÇ  
,
ÇÇ  !
table
ÉÉ 
:
ÉÉ 
$str
ÉÉ  
,
ÉÉ  !
column
ÑÑ 
:
ÑÑ 
$str
ÑÑ &
)
ÑÑ& '
;
ÑÑ' (
migrationBuilder
ÜÜ 
.
ÜÜ 
CreateIndex
ÜÜ (
(
ÜÜ( )
name
áá 
:
áá 
$str
áá (
,
áá( )
schema
àà 
:
àà 
$str
àà  
,
àà  !
table
ââ 
:
ââ 
$str
ââ 
,
ââ 
column
ää 
:
ää 
$str
ää !
)
ää! "
;
ää" #
migrationBuilder
åå 
.
åå 
CreateIndex
åå (
(
åå( )
name
çç 
:
çç 
$str
çç *
,
çç* +
schema
éé 
:
éé 
$str
éé  
,
éé  !
table
èè 
:
èè 
$str
èè 
,
èè 
column
êê 
:
êê 
$str
êê #
)
êê# $
;
êê$ %
migrationBuilder
íí 
.
íí 
CreateIndex
íí (
(
íí( )
name
ìì 
:
ìì 
$str
ìì *
,
ìì* +
schema
îî 
:
îî 
$str
îî  
,
îî  !
table
ïï 
:
ïï 
$str
ïï 
,
ïï  
column
ññ 
:
ññ 
$str
ññ "
)
ññ" #
;
ññ# $
migrationBuilder
òò 
.
òò 
CreateIndex
òò (
(
òò( )
name
ôô 
:
ôô 
$str
ôô /
,
ôô/ 0
schema
öö 
:
öö 
$str
öö  
,
öö  !
table
õõ 
:
õõ 
$str
õõ 
,
õõ  
column
úú 
:
úú 
$str
úú '
)
úú' (
;
úú( )
migrationBuilder
ûû 
.
ûû 
CreateIndex
ûû (
(
ûû( )
name
üü 
:
üü 
$str
üü 5
,
üü5 6
schema
†† 
:
†† 
$str
††  
,
††  !
table
°° 
:
°° 
$str
°° !
,
°°! "
column
¢¢ 
:
¢¢ 
$str
¢¢ +
)
¢¢+ ,
;
¢¢, -
migrationBuilder
§§ 
.
§§ 
CreateIndex
§§ (
(
§§( )
name
•• 
:
•• 
$str
•• 0
,
••0 1
schema
¶¶ 
:
¶¶ 
$str
¶¶  
,
¶¶  !
table
ßß 
:
ßß 
$str
ßß !
,
ßß! "
column
®® 
:
®® 
$str
®® &
)
®®& '
;
®®' (
migrationBuilder
™™ 
.
™™ 
CreateIndex
™™ (
(
™™( )
name
´´ 
:
´´ 
$str
´´ 5
,
´´5 6
schema
¨¨ 
:
¨¨ 
$str
¨¨  
,
¨¨  !
table
≠≠ 
:
≠≠ 
$str
≠≠ %
,
≠≠% &
column
ÆÆ 
:
ÆÆ 
$str
ÆÆ '
)
ÆÆ' (
;
ÆÆ( )
migrationBuilder
∞∞ 
.
∞∞ 
CreateIndex
∞∞ (
(
∞∞( )
name
±± 
:
±± 
$str
±± 9
,
±±9 :
schema
≤≤ 
:
≤≤ 
$str
≤≤  
,
≤≤  !
table
≥≥ 
:
≥≥ 
$str
≥≥ #
,
≥≥# $
column
¥¥ 
:
¥¥ 
$str
¥¥ -
)
¥¥- .
;
¥¥. /
migrationBuilder
∂∂ 
.
∂∂ 
CreateIndex
∂∂ (
(
∂∂( )
name
∑∑ 
:
∑∑ 
$str
∑∑ :
,
∑∑: ;
schema
∏∏ 
:
∏∏ 
$str
∏∏  
,
∏∏  !
table
ππ 
:
ππ 
$str
ππ #
,
ππ# $
column
∫∫ 
:
∫∫ 
$str
∫∫ .
)
∫∫. /
;
∫∫/ 0
}
ªª 	
	protected
ΩΩ 
override
ΩΩ 
void
ΩΩ 
Down
ΩΩ  $
(
ΩΩ$ %
MigrationBuilder
ΩΩ% 5
migrationBuilder
ΩΩ6 F
)
ΩΩF G
{
ææ 	
migrationBuilder
øø 
.
øø 
	DropTable
øø &
(
øø& '
name
¿¿ 
:
¿¿ 
$str
¿¿ (
,
¿¿( )
schema
¡¡ 
:
¡¡ 
$str
¡¡  
)
¡¡  !
;
¡¡! "
migrationBuilder
√√ 
.
√√ 
	DropTable
√√ &
(
√√& '
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ (
,
ƒƒ( )
schema
≈≈ 
:
≈≈ 
$str
≈≈  
)
≈≈  !
;
≈≈! "
migrationBuilder
«« 
.
«« 
	DropTable
«« &
(
««& '
name
»» 
:
»» 
$str
»» (
,
»»( )
schema
…… 
:
…… 
$str
……  
)
……  !
;
……! "
migrationBuilder
ÀÀ 
.
ÀÀ 
	DropTable
ÀÀ &
(
ÀÀ& '
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ '
,
ÃÃ' (
schema
ÕÕ 
:
ÕÕ 
$str
ÕÕ  
)
ÕÕ  !
;
ÕÕ! "
migrationBuilder
œœ 
.
œœ 
	DropTable
œœ &
(
œœ& '
name
–– 
:
–– 
$str
–– (
,
––( )
schema
—— 
:
—— 
$str
——  
)
——  !
;
——! "
migrationBuilder
”” 
.
”” 
	DropTable
”” &
(
””& '
name
‘‘ 
:
‘‘ 
$str
‘‘ 
,
‘‘  
schema
’’ 
:
’’ 
$str
’’  
)
’’  !
;
’’! "
migrationBuilder
◊◊ 
.
◊◊ 
	DropTable
◊◊ &
(
◊◊& '
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ 
,
ÿÿ 
schema
ŸŸ 
:
ŸŸ 
$str
ŸŸ  
)
ŸŸ  !
;
ŸŸ! "
migrationBuilder
€€ 
.
€€ 
	DropTable
€€ &
(
€€& '
name
‹‹ 
:
‹‹ 
$str
‹‹ $
,
‹‹$ %
schema
›› 
:
›› 
$str
››  
)
››  !
;
››! "
migrationBuilder
ﬂﬂ 
.
ﬂﬂ 
	DropTable
ﬂﬂ &
(
ﬂﬂ& '
name
‡‡ 
:
‡‡ 
$str
‡‡ #
,
‡‡# $
schema
·· 
:
·· 
$str
··  
)
··  !
;
··! "
migrationBuilder
„„ 
.
„„ 
	DropTable
„„ &
(
„„& '
name
‰‰ 
:
‰‰ 
$str
‰‰ #
,
‰‰# $
schema
ÂÂ 
:
ÂÂ 
$str
ÂÂ  
)
ÂÂ  !
;
ÂÂ! "
migrationBuilder
ÁÁ 
.
ÁÁ 
	DropTable
ÁÁ &
(
ÁÁ& '
name
ËË 
:
ËË 
$str
ËË 
,
ËË 
schema
ÈÈ 
:
ÈÈ 
$str
ÈÈ  
)
ÈÈ  !
;
ÈÈ! "
migrationBuilder
ÎÎ 
.
ÎÎ 
	DropTable
ÎÎ &
(
ÎÎ& '
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ  
,
ÏÏ  !
schema
ÌÌ 
:
ÌÌ 
$str
ÌÌ  
)
ÌÌ  !
;
ÌÌ! "
migrationBuilder
ÔÔ 
.
ÔÔ 
	DropTable
ÔÔ &
(
ÔÔ& '
name
 
:
 
$str
 
,
  
schema
ÒÒ 
:
ÒÒ 
$str
ÒÒ  
)
ÒÒ  !
;
ÒÒ! "
migrationBuilder
ÛÛ 
.
ÛÛ 
	DropTable
ÛÛ &
(
ÛÛ& '
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ $
,
ÙÙ$ %
schema
ıı 
:
ıı 
$str
ıı  
)
ıı  !
;
ıı! "
migrationBuilder
˜˜ 
.
˜˜ 
	DropTable
˜˜ &
(
˜˜& '
name
¯¯ 
:
¯¯ 
$str
¯¯ (
,
¯¯( )
schema
˘˘ 
:
˘˘ 
$str
˘˘  
)
˘˘  !
;
˘˘! "
migrationBuilder
˚˚ 
.
˚˚ 
	DropTable
˚˚ &
(
˚˚& '
name
¸¸ 
:
¸¸ 
$str
¸¸ "
,
¸¸" #
schema
˝˝ 
:
˝˝ 
$str
˝˝  
)
˝˝  !
;
˝˝! "
migrationBuilder
ˇˇ 
.
ˇˇ 
	DropTable
ˇˇ &
(
ˇˇ& '
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ $
,
ÄÄ$ %
schema
ÅÅ 
:
ÅÅ 
$str
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "
migrationBuilder
ÉÉ 
.
ÉÉ 
	DropTable
ÉÉ &
(
ÉÉ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ *
,
ÑÑ* +
schema
ÖÖ 
:
ÖÖ 
$str
ÖÖ  
)
ÖÖ  !
;
ÖÖ! "
migrationBuilder
áá 
.
áá 
	DropTable
áá &
(
áá& '
name
àà 
:
àà 
$str
àà +
,
àà+ ,
schema
ââ 
:
ââ 
$str
ââ  
)
ââ  !
;
ââ! "
}
ää 	
}
ãã 
}åå œ
vD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Migrations\20220710210906_seed_OrderStatus.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
seed_OrderStatus )
:* +
	Migration, 5
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
Sql  
(  !
$str	! Ÿ
)
Ÿ ⁄
;
⁄ €
migrationBuilder 
. 
Sql  
(  !
$str	! Ã
)
Ã Õ
;
Õ Œ
migrationBuilder 
. 
Sql  
(  !
$str	! —
)
— “
;
“ ”
migrationBuilder 
. 
Sql  
(  !
$str	! ÷
)
÷ ◊
;
◊ ÿ
migrationBuilder 
. 
Sql  
(  !
$str	! —
)
— “
;
“ ”
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
Sql  
(  !
$str! }
)} ~
;~ 
migrationBuilder 
. 
Sql  
(  !
$str! }
)} ~
;~ 
migrationBuilder 
. 
Sql  
(  !
$str! }
)} ~
;~ 
migrationBuilder 
. 
Sql  
(  !
$str! }
)} ~
;~ 
migrationBuilder 
. 
Sql  
(  !
$str! }
)} ~
;~ 
} 	
} 
} ÷5
]D:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\RepositoryFactory.cs
	namespace		 	
IHunger		
 
.		 
Infra		 
.		 
Data		 
{

 
public 

class 
RepositoryFactory "
:# $
IRepositoryFactory% 7
{ 
private 
readonly !
DataIdentityDbContext .

_dbContext/ 9
;9 :
public 
RepositoryFactory  
(  !!
DataIdentityDbContext! 6
	dbContext7 @
)@ A
{ 	

_dbContext 
= 
	dbContext "
;" #
} 	
private (
IAddressRestaurantRepository ,(
_addressRestaurantRepository- I
;I J
public (
IAddressRestaurantRepository +'
AddressRestaurantRepository, G
{ 	
get 
=> (
_addressRestaurantRepository /
??0 2
(3 4(
_addressRestaurantRepository4 P
=Q R
newS V'
AddressRestaurantRepositoryW r
(r s

_dbContexts }
)} ~
)~ 
;	 Ä
} 	
private "
IAddressUserRepository &"
_addressUserRepository' =
;= >
public "
IAddressUserRepository %!
AddressUserRepository& ;
{ 	
get 
=> "
_addressUserRepository )
??* ,
(- ."
_addressUserRepository. D
=E F
newG J!
AddressUserRepositoryK `
(` a

_dbContexta k
)k l
)l m
;m n
} 	
private   &
ICategoryProductRepository   *&
_categoryProductRepository  + E
;  E F
public!! &
ICategoryProductRepository!! )%
CategoryProductRepository!!* C
{"" 	
get## 
=>## &
_categoryProductRepository## -
??##. 0
(##1 2&
_categoryProductRepository##2 L
=##M N
new##O R%
CategoryProductRepository##S l
(##l m

_dbContext##m w
)##w x
)##x y
;##y z
}$$ 	
private&& )
ICategoryRestaurantRepository&& -)
_categoryRestaurantRepository&&. K
;&&K L
public'' )
ICategoryRestaurantRepository'' ,(
CategoryRestaurantRepository''- I
{(( 	
get)) 
=>)) )
_categoryRestaurantRepository)) 0
??))1 3
())4 5)
_categoryRestaurantRepository))5 R
=))S T
new))U X(
CategoryRestaurantRepository))Y u
())u v

_dbContext	))v Ä
)
))Ä Å
)
))Å Ç
;
))Ç É
}** 	
private,, 
ICommentRepository,, "
_commentRepository,,# 5
;,,5 6
public-- 
ICommentRepository-- !
CommentRepository--" 3
{.. 	
get// 
=>// 
_commentRepository// %
??//& (
(//) *
_commentRepository//* <
=//= >
new//? B
CommentRepository//C T
(//T U

_dbContext//U _
)//_ `
)//` a
;//a b
}00 	
private22 
ICouponRepository22 !
_couponRepository22" 3
;223 4
public33 
ICouponRepository33  
CouponRepository33! 1
{44 	
get55 
=>55 
_couponRepository55 $
??55% '
(55( )
_couponRepository55) :
=55; <
new55= @
CouponRepository55A Q
(55Q R

_dbContext55R \
)55\ ]
)55] ^
;55^ _
}66 	
private88 
IItemRepository88 
_itemRepository88  /
;88/ 0
public99 
IItemRepository99 
ItemRepository99 -
{:: 	
get;; 
=>;; 
_itemRepository;; "
??;;# %
(;;& '
_itemRepository;;' 6
=;;7 8
new;;9 <
ItemRepository;;= K
(;;K L

_dbContext;;L V
);;V W
);;W X
;;;X Y
}<< 	
private>> 
IOrderRepository>>  
_orderRepository>>! 1
;>>1 2
public?? 
IOrderRepository?? 
OrderRepository??  /
{@@ 	
getAA 
=>AA 
_orderRepositoryAA #
??AA$ &
(AA' (
_orderRepositoryAA( 8
=AA9 :
newAA; >
OrderRepositoryAA? N
(AAN O

_dbContextAAO Y
)AAY Z
)AAZ [
;AA[ \
}BB 	
privateDD "
IOrderStatusRepositoryDD &"
_orderStatusRepositoryDD' =
;DD= >
publicEE "
IOrderStatusRepositoryEE %!
OrderStatusRepositoryEE& ;
{FF 	
getGG 
=>GG "
_orderStatusRepositoryGG )
??GG* ,
(GG- ."
_orderStatusRepositoryGG. D
=GGE F
newGGG J!
OrderStatusRepositoryGGK `
(GG` a

_dbContextGGa k
)GGk l
)GGl m
;GGm n
}HH 	
privateJJ 
IProductRepositoryJJ "
_productRepositoryJJ# 5
;JJ5 6
publicKK 
IProductRepositoryKK !
ProductRepositoryKK" 3
{LL 	
getMM 
=>MM 
_productRepositoryMM %
??MM& (
(MM) *
_productRepositoryMM* <
=MM= >
newMM? B
ProductRepositoryMMC T
(MMT U

_dbContextMMU _
)MM_ `
)MM` a
;MMa b
}NN 	
privatePP !
IRestaurantRepositoryPP %!
_restaurantRepositoryPP& ;
;PP; <
publicQQ !
IRestaurantRepositoryQQ $ 
RestaurantRepositoryQQ% 9
{RR 	
getSS 
=>SS !
_restaurantRepositorySS (
??SS) +
(SS, -!
_restaurantRepositorySS- B
=SSC D
newSSE H 
RestaurantRepositorySSI ]
(SS] ^

_dbContextSS^ h
)SSh i
)SSi j
;SSj k
}TT 	
privateVV "
IProfileUserRepositoryVV &"
_profileUserRepositoryVV' =
;VV= >
publicWW "
IProfileUserRepositoryWW %!
ProfileUserRepositoryWW& ;
{XX 	
getYY 
=>YY "
_profileUserRepositoryYY )
??YY* ,
(YY- ."
_profileUserRepositoryYY. D
=YYE F
newYYG J!
ProfileUserRepositoryYYK `
(YY` a

_dbContextYYa k
)YYk l
)YYl m
;YYm n
}ZZ 	
}[[ 
}\\ ®
rD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\AddressRestaurantRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 '
AddressRestaurantRepository

 ,
:

- .

Repository

/ 9
<

9 :
AddressRestaurant

: K
>

K L
,

L M(
IAddressRestaurantRepository

N j
{ 
public '
AddressRestaurantRepository *
(* +!
DataIdentityDbContext+ @
dbA C
)C D
:E F
baseG K
(K L
dbL N
)N O
{ 	
} 	
} 
} ä
lD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\AddressUserRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 !
AddressUserRepository

 &
:

' (

Repository

) 3
<

3 4
AddressUser

4 ?
>

? @
,

@ A"
IAddressUserRepository

B X
{ 
public !
AddressUserRepository $
($ %!
DataIdentityDbContext% :
db; =
)= >
:? @
baseA E
(E F
dbF H
)H I
{ 	
} 	
} 
} û
pD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\CategoryProductRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 %
CategoryProductRepository

 *
:

+ ,

Repository

- 7
<

7 8
CategoryProduct

8 G
>

G H
,

H I&
ICategoryProductRepository

J d
{ 
public %
CategoryProductRepository (
(( )!
DataIdentityDbContext) >
db? A
)A B
:C D
baseE I
(I J
dbJ L
)L M
{ 	
} 	
} 
} ≠
sD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\CategoryRestaurantRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 (
CategoryRestaurantRepository

 -
:

. /

Repository

0 :
<

: ;
CategoryRestaurant

; M
>

M N
,

N O)
ICategoryRestaurantRepository

P m
{ 
public (
CategoryRestaurantRepository +
(+ ,!
DataIdentityDbContext, A
dbB D
)D E
:F G
baseH L
(L M
dbM O
)O P
{ 	
} 	
} 
} Ù
hD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\CommentRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{ 
public 

class 
CommentRepository "
:# $

Repository% /
</ 0
Comment0 7
>7 8
,8 9
ICommentRepository: L
{ 
public 
CommentRepository  
(  !!
DataIdentityDbContext! 6
db7 9
)9 :
:; <
base= A
(A B
dbB D
)D E
{ 	
} 	
public 
virtual 
async 
Task !
<! "
Comment" )
>) *
GetById+ 2
(2 3
Guid3 7
idRestaurant8 D
,D E
GuidF J
	idCommentK T
)T U
{ 	
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Where 
( 
x 
=> 
x 
. 
IdRestaurant *
==+ -
idRestaurant. :
&&; =
x> ?
.? @
Id@ B
==C E
	idCommentF O
)O P
. 
FirstOrDefaultAsync $
($ %
)% &
;& '
} 	
public 
virtual 
async 
Task !
<! "
List" &
<& '
Comment' .
>. /
>/ 0
GetAll1 7
(7 8
Guid8 <
idRestaurant= I
)I J
{ 	
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Where 
( 
x 
=> 
x 
. 
IdRestaurant *
==+ -
idRestaurant. :
): ;
.   
ToListAsync   
(   
)   
;   
}!! 	
}"" 
}## Ò
gD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\CouponRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 
CouponRepository

 !
:

" #

Repository

$ .
<

. /
Coupon

/ 5
>

5 6
,

6 7
ICouponRepository

8 I
{ 
public 
CouponRepository 
(  !
DataIdentityDbContext  5
db6 8
)8 9
:: ;
base< @
(@ A
dbA C
)C D
{ 	
} 	
} 
} Á
eD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\ItemRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 
ItemRepository

 
:

  !

Repository

" ,
<

, -
Item

- 1
>

1 2
,

2 3
IItemRepository

4 C
{ 
public 
ItemRepository 
( !
DataIdentityDbContext 3
db4 6
)6 7
:8 9
base: >
(> ?
db? A
)A B
{ 	
} 	
} 
} Ï
fD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\OrderRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 
OrderRepository

  
:

! "

Repository

# -
<

- .
Order

. 3
>

3 4
,

4 5
IOrderRepository

6 F
{ 
public 
OrderRepository 
( !
DataIdentityDbContext 4
db5 7
)7 8
:9 :
base; ?
(? @
db@ B
)B C
{ 	
} 	
} 
} ä
lD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\OrderStatusRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{		 
public

 

class

 !
OrderStatusRepository

 &
:

' (

Repository

) 3
<

3 4
OrderStatus

4 ?
>

? @
,

@ A"
IOrderStatusRepository

B X
{ 
public !
OrderStatusRepository $
($ %!
DataIdentityDbContext% :
db; =
)= >
:? @
baseA E
(E F
dbF H
)H I
{ 	
} 	
} 
} ÄB
hD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\ProductRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{ 
public 

class 
ProductRepository "
:# $

Repository% /
</ 0
Product0 7
>7 8
,8 9
IProductRepository: L
{ 
public 
ProductRepository  
(  !!
DataIdentityDbContext! 6
db7 9
)9 :
:; <
base= A
(A B
dbB D
)D E
{ 	
} 	
public 
override 
async 
Task "
<" #
Product# *
>* +
GetById, 3
(3 4
Guid4 8
id9 ;
); <
{ 	
return 
await 
DbSet 
. 
Include 
( 
x 
=> 
x 
.  

Restaurant  *
)* +
. 
Include 
( 
x 
=> 
x 
.  
CategoryProduct  /
)/ 0
. 
Where 
( 
x 
=> 
x 
. 
Id  
==! #
id$ &
)& '
. 
AsNoTracking 
( 
) 
. 
FirstOrDefaultAsync $
($ %
)% &
;& '
} 	
public 
async 
Task 
< 
List 
< 
Product &
>& '
>' (
GetByRestaurant) 8
(8 9
Guid9 =
id> @
)@ A
{ 	
return   
await   
DbSet   
.!! 
Include!! 
(!! 
x!! 
=>!! 
x!! 
.!!  

Restaurant!!  *
)!!* +
."" 
Include"" 
("" 
x"" 
=>"" 
x"" 
.""  
CategoryProduct""  /
)""/ 0
.## 
Where## 
(## 
x## 
=>## 
x## 
.## 
IdRestaurant## *
==##+ -
id##. 0
)##0 1
.$$ 
ToListAsync$$ 
($$ 
)$$ 
;$$ 
}%% 	
public'' 
async'' 
Task'' 
<'' 
Product'' !
>''! "&
GetByRestaurantByIdProduct''# =
(''= >
Guid''> B
idRestaurant''C O
,''O P
Guid''Q U
	idProduct''V _
)''_ `
{(( 	
return)) 
await)) 
DbSet)) 
.** 
Include** 
(** 
x** 
=>** 
x** 
.**  

Restaurant**  *
)*** +
.++ 
Include++ 
(++ 
x++ 
=>++ 
x++ 
.++  
CategoryProduct++  /
)++/ 0
.,, 
Where,, 
(,, 
x,, 
=>,, 
x,, 
.,, 
IdRestaurant,, *
==,,+ -
idRestaurant,,. :
&&,,; =
x,,> ?
.,,? @
Id,,@ B
==,,C E
	idProduct,,F O
),,O P
.-- 
FirstOrDefaultAsync-- $
(--$ %
)--% &
;--& '
}.. 	
public00 
override00 
async00 
Task00 "
<00" #
List00# '
<00' (
Product00( /
>00/ 0
>000 1
Search002 8
(008 9

Expression11 
<11 
Func11 
<11 
Product11 #
,11# $
bool11% )
>11) *
>11* +
	predicate11, 5
=116 7
null118 <
,11< =
Func22 
<22 

IQueryable22 
<22 
Product22 #
>22# $
,22$ %
IOrderedQueryable22& 7
<227 8
Product228 ?
>22? @
>22@ A
orderBy22B I
=22J K
null22L P
,22P Q
int33 
?33 
pageSize33 
=33 
null33  
,33  !
int44 
?44 
index44 
=44 
null44 
)44 
{55 	
var66 
query66 
=66 
DbSet66 
.66 
AsQueryable66 )
(66) *
)66* +
;66+ ,
query77 
=77 
query77 
.77 
Include77 !
(77! "
x77" #
=>77$ &
x77' (
.77( )

Restaurant77) 3
)773 4
.774 5
Include775 <
(77< =
x77= >
=>77? A
x77B C
.77C D
CategoryProduct77D S
)77S T
;77T U
Count88 
=88 
query88 
.88 
Count88 
(88  
)88  !
;88! "
int:: 
pages:: 
=:: 
$num:: 
;:: 
if<< 
(<< 
	predicate<< 
!=<< 
null<< !
)<<! "
{== 
query>> 
=>> 
query>> 
.>> 
Where>> #
(>># $
	predicate>>$ -
)>>- .
;>>. /
}?? 
ifAA 
(AA 
pageSizeAA 
!=AA 
nullAA  
&&AA! #
pageSizeAA$ ,
.AA, -
HasValueAA- 5
&&AA6 8
pageSizeAA9 A
>AAB C
$numAAD E
)AAE F
{BB 
pagesCC 
=CC 
CountCC 
/CC 
pageSizeCC  (
.CC( )
ValueCC) .
;CC. /
ifEE 
(EE 
indexEE 
!=EE 
nullEE !
&&EE" $
indexEE% *
.EE* +
HasValueEE+ 3
&&EE4 6
indexEE7 <
.EE< =
ValueEE= B
>EEC D
$numEEE F
)EEF G
{FF 
ifGG 
(GG 
indexGG 
.GG 
ValueGG #
>GG$ %
pagesGG& +
)GG+ ,
{HH 
queryII 
=II 
queryII  %
.II% &
OrderByII& -
(II- .
xII. /
=>II0 2
xII3 4
.II4 5
IdII5 7
)II7 8
.II8 9
SkipII9 =
(II= >
pageSizeII> F
.IIF G
ValueIIG L
*IIM N
pagesIIO T
)IIT U
.IIU V
TakeIIV Z
(IIZ [
pageSizeII[ c
.IIc d
ValueIId i
)IIi j
;IIj k
}JJ 
elseKK 
{LL 
queryMM 
=MM 
queryMM  %
.MM% &
OrderByMM& -
(MM- .
xMM. /
=>MM0 2
xMM3 4
.MM4 5
IdMM5 7
)MM7 8
.MM8 9
SkipMM9 =
(MM= >
pageSizeMM> F
.MMF G
ValueMMG L
*MMM N
indexMMO T
.MMT U
ValueMMU Z
)MMZ [
.MM[ \
TakeMM\ `
(MM` a
pageSizeMMa i
.MMi j
ValueMMj o
)MMo p
;MMp q
}NN 
}PP 
elseQQ 
{RR 
querySS 
=SS 
querySS !
.SS! "
OrderBySS" )
(SS) *
xSS* +
=>SS, .
xSS/ 0
.SS0 1
IdSS1 3
)SS3 4
.SS4 5
SkipSS5 9
(SS9 :
pageSizeSS: B
.SSB C
ValueSSC H
)SSH I
;SSI J
}TT 
}VV 
ifXX 
(XX 
orderByXX 
!=XX 
nullXX 
)XX  
{YY 
returnZZ 
awaitZZ 
orderByZZ $
(ZZ$ %
queryZZ% *
)ZZ* +
.ZZ+ ,
ToListAsyncZZ, 7
(ZZ7 8
)ZZ8 9
;ZZ9 :
}[[ 
return]] 
await]] 
query]] 
.]] 
ToListAsync]] *
(]]* +
)]]+ ,
;]], -
}^^ 	
}__ 
}`` ¶
lD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\ProfileUserRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{ 
public 

class !
ProfileUserRepository &
:' (

Repository) 3
<3 4
ProfileUser4 ?
>? @
,@ A"
IProfileUserRepositoryB X
{ 
public !
ProfileUserRepository $
($ %!
DataIdentityDbContext% :
db; =
)= >
:? @
baseA E
(E F
dbF H
)H I
{ 	
} 	
public 
override 
async 
Task "
<" #
ProfileUser# .
>. /
GetById0 7
(7 8
Guid8 <
id= ?
)? @
{ 	
return 
await 
DbSet 
. 
Include 
( 
x 
=> 
x 
.  
AddressUser  +
)+ ,
. 
Where 
( 
x 
=> 
x 
. 
Id  
==! #
id$ &
)& '
. 
AsNoTracking 
( 
) 
. 
FirstOrDefaultAsync $
($ %
)% &
;& '
} 	
} 
} €J
aD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\Repository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{ 
public 

abstract 
class 

Repository $
<$ %
TEntity% ,
>, -
:. /
IRepository0 ;
<; <
TEntity< C
>C D
whereE J
TEntityK R
:S T
EntityU [
,[ \
new] `
(` a
)a b
{ 
	protected 
readonly !
DataIdentityDbContext 0
Db1 3
;3 4
	protected 
readonly 
DbSet  
<  !
TEntity! (
>( )
DbSet* /
;/ 0
	protected 
int 
Count 
; 
	protected 

Repository 
( !
DataIdentityDbContext 2
db3 5
)5 6
{ 	
Db 
= 
db 
; 
DbSet 
= 
db 
. 
Set 
< 
TEntity "
>" #
(# $
)$ %
;% &
Count 
= 
DbSet 
. 
AsQueryable %
(% &
)& '
.' (
Count( -
(- .
). /
;/ 0
} 	
public 
async 
Task 
Add 
( 
TEntity %
entity& ,
), -
{ 	
await 
DbSet 
. 
AddAsync  
(  !
entity! '
)' (
;( )
} 	
public!! 
void!! 
Dispose!! 
(!! 
)!! 
{"" 	
Db## 
?## 
.## 
Dispose## 
(## 
)## 
;## 
}$$ 	
public&& 
virtual&& 
async&& 
Task&& !
<&&! "
List&&" &
<&&& '
TEntity&&' .
>&&. /
>&&/ 0
GetAll&&1 7
(&&7 8
)&&8 9
{'' 	
return(( 
await(( 
DbSet(( 
.(( 
ToListAsync(( *
(((* +
)((+ ,
;((, -
})) 	
public** 
async** 
Task** 
<** 
IEnumerable** %
<**% &
TEntity**& -
>**- .
>**. /
Find**0 4
(**4 5

Expression**5 ?
<**? @
Func**@ D
<**D E
TEntity**E L
,**L M
bool**N R
>**R S
>**S T
	predicate**U ^
)**^ _
{++ 	
return,, 
await,, 
DbSet,, 
.,, 
AsNoTracking,, +
(,,+ ,
),,, -
.,,- .
Where,,. 3
(,,3 4
	predicate,,4 =
),,= >
.,,> ?
ToListAsync,,? J
(,,J K
),,K L
;,,L M
}-- 	
public// 
virtual// 
async// 
Task// !
<//! "
TEntity//" )
>//) *
GetById//+ 2
(//2 3
Guid//3 7
id//8 :
)//: ;
{00 	
return11 
await11 
DbSet11 
.11 
	FindAsync11 (
(11( )
id11) +
)11+ ,
;11, -
}22 	
public44 
virtual44 
void44 
Remove44 "
(44" #
Guid44# '
id44( *
)44* +
{55 	
var66 
entity66 
=66 
DbSet66 
.66 
Find66 #
(66# $
id66$ &
)66& '
;66' (
DbSet77 
.77 
Remove77 
(77 
entity77 
)77  
;77  !
}88 	
public:: 
virtual:: 
async:: 
Task:: !
<::! "
bool::" &
>::& '
Commit::( .
(::. /
)::/ 0
{;; 	
var<< 
result<< 
=<< 
await<< 
Db<< !
.<<! "
SaveChangesAsync<<" 2
(<<2 3
)<<3 4
;<<4 5
return== 
await== 
Task== 
.== 

FromResult== (
(==( )
result==) /
>==0 1
$num==2 3
)==3 4
;==4 5
}>> 	
public@@ 
virtual@@ 
async@@ 
Task@@ !
<@@! "
List@@" &
<@@& '
TEntity@@' .
>@@. /
>@@/ 0
Search@@1 7
(@@7 8

ExpressionAA 
<AA 
FuncAA 
<AA 
TEntityAA #
,AA# $
boolAA% )
>AA) *
>AA* +
	predicateAA, 5
=AA6 7
nullAA8 <
,AA< =
FuncBB 
<BB 

IQueryableBB 
<BB 
TEntityBB #
>BB# $
,BB$ %
IOrderedQueryableBB& 7
<BB7 8
TEntityBB8 ?
>BB? @
>BB@ A
orderByBBB I
=BBJ K
nullBBL P
,BBP Q
intCC 
?CC 
pageSizeCC 
=CC 
nullCC  
,CC  !
intDD 
?DD 
	pageIndexDD 
=DD 
nullDD !
)DD! "
{EE 	
varFF 
queryFF 
=FF 
DbSetFF 
.FF 
AsQueryableFF )
(FF) *
)FF* +
;FF+ ,
CountGG 
=GG 
queryGG 
.GG 
CountGG 
(GG  
)GG  !
;GG! "
intHH 
pagesHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
	predicateJJ 
!=JJ 
nullJJ !
)JJ! "
{KK 
queryLL 
=LL 
queryLL 
.LL 
WhereLL #
(LL# $
	predicateLL$ -
)LL- .
;LL. /
}MM 
ifOO 
(OO 
pageSizeOO 
!=OO 
nullOO 
&&OO  "
pageSizeOO# +
.OO+ ,
HasValueOO, 4
&&OO5 7
pageSizeOO8 @
>OOA B
$numOOC D
)OOD E
{PP 
pagesQQ 
=QQ 
CountQQ 
/QQ 
pageSizeQQ  (
.QQ( )
ValueQQ) .
;QQ. /
ifSS 
(SS 
	pageIndexSS 
!=SS 
nullSS  $
&&SS% '
	pageIndexSS( 1
.SS1 2
HasValueSS2 :
&&SS; =
	pageIndexSS> G
.SSG H
ValueSSH M
>SSN O
$numSSP Q
)SSQ R
{TT 
ifUU 
(UU 
	pageIndexUU  
.UU  !
ValueUU! &
>UU' (
pagesUU) .
)UU. /
{VV 
queryWW 
=WW 
queryWW  %
.WW% &
OrderByWW& -
(WW- .
xWW. /
=>WW0 2
xWW3 4
.WW4 5
IdWW5 7
)WW7 8
.WW8 9
SkipWW9 =
(WW= >
pageSizeWW> F
.WWF G
ValueWWG L
*WWM N
pagesWWO T
)WWT U
.WWU V
TakeWWV Z
(WWZ [
pageSizeWW[ c
.WWc d
ValueWWd i
)WWi j
;WWj k
}XX 
elseYY 
{ZZ 
query[[ 
=[[ 
query[[  %
.[[% &
OrderBy[[& -
([[- .
x[[. /
=>[[0 2
x[[3 4
.[[4 5
Id[[5 7
)[[7 8
.[[8 9
Skip[[9 =
([[= >
pageSize[[> F
.[[F G
Value[[G L
*[[M N
	pageIndex[[O X
.[[X Y
Value[[Y ^
)[[^ _
.[[_ `
Take[[` d
([[d e
pageSize[[e m
.[[m n
Value[[n s
)[[s t
;[[t u
}\\ 
}^^ 
else__ 
{`` 
queryaa 
=aa 
queryaa !
.aa! "
OrderByaa" )
(aa) *
xaa* +
=>aa, .
xaa/ 0
.aa0 1
Idaa1 3
)aa3 4
.aa4 5
Skipaa5 9
(aa9 :
pageSizeaa: B
.aaB C
ValueaaC H
)aaH I
;aaI J
}bb 
}dd 
ifff 
(ff 
orderByff 
!=ff 
nullff 
)ff  
{gg 
returnhh 
awaithh 
orderByhh $
(hh$ %
queryhh% *
)hh* +
.hh+ ,
ToListAsynchh, 7
(hh7 8
)hh8 9
;hh9 :
}ii 
returnkk 
awaitkk 
querykk 
.kk 
ToListAsynckk *
(kk* +
)kk+ ,
;kk, -
}ll 	
publicnn 
virtualnn 
voidnn 
Updatenn "
(nn" #
TEntitynn# *
entitynn+ 1
)nn1 2
{oo 	
entitypp 
.pp 
	UpdatedAtpp 
=pp 
DateTimepp '
.pp' (
Nowpp( +
;pp+ ,
DbSetqq 
.qq 
Updateqq 
(qq 
entityqq 
)qq  
;qq  !
}rr 	
}ss 
}tt ì4
kD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\Repository\RestaurantRepository.cs
	namespace 	
IHunger
 
. 
Infra 
. 
Data 
. 

Repository '
{ 
public 

class  
RestaurantRepository %
:& '

Repository( 2
<2 3

Restaurant3 =
>= >
,> ?!
IRestaurantRepository@ U
{ 
public  
RestaurantRepository #
(# $!
DataIdentityDbContext$ 9
db: <
)< =
:> ?
base@ D
(D E
dbE G
)G H
{ 	
} 	
public 
override 
async 
Task "
<" #

Restaurant# -
>- .
GetById/ 6
(6 7
Guid7 ;
id< >
)> ?
{ 	
return 
await 
DbSet 
. 
Include 
( 
x 
=> 
x 
.  
AddressRestaurant  1
)1 2
. 
Include 
( 
x 
=> 
x 
.  
CategoryRestaurant  2
)2 3
. 
Where 
( 
x 
=> 
x 
. 
Id  
==! #
id$ &
)& '
. 
AsNoTracking 
( 
) 
. 
FirstOrDefaultAsync $
($ %
)% &
;& '
} 	
public 
override 
async 
Task "
<" #
List# '
<' (

Restaurant( 2
>2 3
>3 4
Search5 ;
(; <

Expression   
<   
Func   
<   

Restaurant   &
,  & '
bool  ( ,
>  , -
>  - .
	predicate  / 8
=  9 :
null  ; ?
,  ? @
Func!! 
<!! 

IQueryable!! 
<!! 

Restaurant!! &
>!!& '
,!!' (
IOrderedQueryable!!) :
<!!: ;

Restaurant!!; E
>!!E F
>!!F G
orderBy!!H O
=!!P Q
null!!R V
,!!V W
int"" 
?"" 
pageSize"" 
="" 
null""  
,""  !
int## 
?## 
index## 
=## 
null## 
)## 
{$$ 	
var%% 
query%% 
=%% 
DbSet%% 
.%% 
AsQueryable%% )
(%%) *
)%%* +
;%%+ ,
Count&& 
=&& 
query&& 
.&& 
Count&& 
(&&  
)&&  !
;&&! "
int'' 
pages'' 
='' 
$num'' 
;'' 
query(( 
=(( 
query(( 
.(( 
Include(( !
(((! "
x((" #
=>(($ &
x((' (
.((( )
AddressRestaurant(() :
)((: ;
.((; <
Include((< C
(((C D
x((D E
=>((F H
x((I J
.((J K
CategoryRestaurant((K ]
)((] ^
.((^ _
Include((_ f
(((f g
x((g h
=>((i k
x((l m
.((m n
Comments((n v
)((v w
;((w x
if** 
(** 
	predicate** 
!=** 
null** !
)**! "
{++ 
query,, 
=,, 
query,, 
.,, 
Where,, #
(,,# $
	predicate,,$ -
),,- .
;,,. /
}-- 
if// 
(// 
pageSize// 
!=// 
null//  
&&//! #
pageSize//$ ,
.//, -
HasValue//- 5
&&//6 8
pageSize//9 A
>//B C
$num//D E
)//E F
{00 
pages11 
=11 
Count11 
/11 
pageSize11  (
.11( )
Value11) .
;11. /
if33 
(33 
index33 
!=33 
null33 !
&&33" $
index33% *
.33* +
HasValue33+ 3
&&334 6
index337 <
.33< =
Value33= B
>33C D
$num33E F
)33F G
{44 
if55 
(55 
index55 
.55 
Value55 #
>55$ %
pages55& +
)55+ ,
{66 
query77 
=77 
query77  %
.77% &
OrderBy77& -
(77- .
x77. /
=>770 2
x773 4
.774 5
Id775 7
)777 8
.778 9
Skip779 =
(77= >
pageSize77> F
.77F G
Value77G L
*77M N
pages77O T
)77T U
.77U V
Take77V Z
(77Z [
pageSize77[ c
.77c d
Value77d i
)77i j
;77j k
}88 
else99 
{:: 
query;; 
=;; 
query;;  %
.;;% &
OrderBy;;& -
(;;- .
x;;. /
=>;;0 2
x;;3 4
.;;4 5
Id;;5 7
);;7 8
.;;8 9
Skip;;9 =
(;;= >
pageSize;;> F
.;;F G
Value;;G L
*;;M N
index;;O T
.;;T U
Value;;U Z
);;Z [
.;;[ \
Take;;\ `
(;;` a
pageSize;;a i
.;;i j
Value;;j o
);;o p
;;;p q
}<< 
}>> 
else?? 
{@@ 
queryAA 
=AA 
queryAA !
.AA! "
OrderByAA" )
(AA) *
xAA* +
=>AA, .
xAA/ 0
.AA0 1
IdAA1 3
)AA3 4
.AA4 5
SkipAA5 9
(AA9 :
pageSizeAA: B
.AAB C
ValueAAC H
)AAH I
;AAI J
}BB 
}DD 
ifFF 
(FF 
orderByFF 
!=FF 
nullFF 
)FF  
{GG 
returnHH 
awaitHH 
orderByHH $
(HH$ %
queryHH% *
)HH* +
.HH+ ,
ToListAsyncHH, 7
(HH7 8
)HH8 9
;HH9 :
}II 
returnKK 
awaitKK 
queryKK 
.KK 
ToListAsyncKK *
(KK* +
)KK+ ,
;KK, -
}LL 	
}MM 
}NN ‚
VD:\TI\git\v2\IHunger_API\IHunger\4 - Infra\4.1 - Data\IHunger.Infra.Data\UnitOfWork.cs
	namespace

 	
IHunger


 
.

 
Infra

 
.

 
Data

 
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly !
DataIdentityDbContext .

_dbContext/ 9
;9 :
public 
IRepositoryFactory !
RepositoryFactory" 3
{4 5
get6 9
;9 :
}; <
public 

UnitOfWork 
( !
DataIdentityDbContext /
	dbContext0 9
)9 :
{ 	

_dbContext 
= 
	dbContext "
;" #
RepositoryFactory 
= 
new  #
RepositoryFactory$ 5
(5 6

_dbContext6 @
)@ A
;A B
} 	
public 
async 
Task 
< 
bool 
> 
Commit  &
(& '
)' (
{ 	
var 
result 
= 
await 

_dbContext )
.) *
SaveChangesAsync* :
(: ;
); <
;< =
return 
await 
Task 
. 

FromResult (
(( )
result) /
>0 1
$num2 3
)3 4
;4 5
} 	
private 
bool 
disposed 
= 
false  %
;% &
	protected 
virtual 
void 
Dispose &
(& '
bool' +
	disposing, 5
)5 6
{ 	
if   
(   
!   
this   
.   
disposed   
)   
{!! 
if"" 
("" 
	disposing"" 
)"" 
{## 

_dbContext$$ 
.$$ 
Dispose$$ &
($$& '
)$$' (
;$$( )
}%% 
}&& 
this'' 
.'' 
disposed'' 
='' 
true''  
;''  !
}(( 	
public** 
void** 
Dispose** 
(** 
)** 
{++ 	
Dispose,, 
(,, 
true,, 
),, 
;,, 
GC-- 
.-- 
SuppressFinalize-- 
(--  
this--  $
)--$ %
;--% &
}.. 	
}// 
}00 